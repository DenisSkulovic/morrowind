/**
 * @fileoverview gRPC-Web generated client stub for world
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.12.4
// source: world.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as world_pb from './world_pb'; // proto import: "world.proto"


export class WorldServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorgetWorld = new grpcWeb.MethodDescriptor(
    '/world.WorldService/getWorld',
    grpcWeb.MethodType.UNARY,
    world_pb.GetWorldRequest,
    world_pb.GetWorldResponse,
    (request: world_pb.GetWorldRequest) => {
      return request.serializeBinary();
    },
    world_pb.GetWorldResponse.deserializeBinary
  );

  getWorld(
    request: world_pb.GetWorldRequest,
    metadata?: grpcWeb.Metadata | null): Promise<world_pb.GetWorldResponse>;

  getWorld(
    request: world_pb.GetWorldRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: world_pb.GetWorldResponse) => void): grpcWeb.ClientReadableStream<world_pb.GetWorldResponse>;

  getWorld(
    request: world_pb.GetWorldRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: world_pb.GetWorldResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/world.WorldService/getWorld',
        request,
        metadata || {},
        this.methodDescriptorgetWorld,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/world.WorldService/getWorld',
    request,
    metadata || {},
    this.methodDescriptorgetWorld);
  }

  methodDescriptorcreateWorld = new grpcWeb.MethodDescriptor(
    '/world.WorldService/createWorld',
    grpcWeb.MethodType.UNARY,
    world_pb.CreateWorldRequest,
    world_pb.CreateWorldResponse,
    (request: world_pb.CreateWorldRequest) => {
      return request.serializeBinary();
    },
    world_pb.CreateWorldResponse.deserializeBinary
  );

  createWorld(
    request: world_pb.CreateWorldRequest,
    metadata?: grpcWeb.Metadata | null): Promise<world_pb.CreateWorldResponse>;

  createWorld(
    request: world_pb.CreateWorldRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: world_pb.CreateWorldResponse) => void): grpcWeb.ClientReadableStream<world_pb.CreateWorldResponse>;

  createWorld(
    request: world_pb.CreateWorldRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: world_pb.CreateWorldResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/world.WorldService/createWorld',
        request,
        metadata || {},
        this.methodDescriptorcreateWorld,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/world.WorldService/createWorld',
    request,
    metadata || {},
    this.methodDescriptorcreateWorld);
  }

  methodDescriptorupdateWorld = new grpcWeb.MethodDescriptor(
    '/world.WorldService/updateWorld',
    grpcWeb.MethodType.UNARY,
    world_pb.UpdateWorldRequest,
    world_pb.UpdateWorldResponse,
    (request: world_pb.UpdateWorldRequest) => {
      return request.serializeBinary();
    },
    world_pb.UpdateWorldResponse.deserializeBinary
  );

  updateWorld(
    request: world_pb.UpdateWorldRequest,
    metadata?: grpcWeb.Metadata | null): Promise<world_pb.UpdateWorldResponse>;

  updateWorld(
    request: world_pb.UpdateWorldRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: world_pb.UpdateWorldResponse) => void): grpcWeb.ClientReadableStream<world_pb.UpdateWorldResponse>;

  updateWorld(
    request: world_pb.UpdateWorldRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: world_pb.UpdateWorldResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/world.WorldService/updateWorld',
        request,
        metadata || {},
        this.methodDescriptorupdateWorld,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/world.WorldService/updateWorld',
    request,
    metadata || {},
    this.methodDescriptorupdateWorld);
  }

  methodDescriptordeleteWorld = new grpcWeb.MethodDescriptor(
    '/world.WorldService/deleteWorld',
    grpcWeb.MethodType.UNARY,
    world_pb.DeleteWorldRequest,
    world_pb.DeleteWorldResponse,
    (request: world_pb.DeleteWorldRequest) => {
      return request.serializeBinary();
    },
    world_pb.DeleteWorldResponse.deserializeBinary
  );

  deleteWorld(
    request: world_pb.DeleteWorldRequest,
    metadata?: grpcWeb.Metadata | null): Promise<world_pb.DeleteWorldResponse>;

  deleteWorld(
    request: world_pb.DeleteWorldRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: world_pb.DeleteWorldResponse) => void): grpcWeb.ClientReadableStream<world_pb.DeleteWorldResponse>;

  deleteWorld(
    request: world_pb.DeleteWorldRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: world_pb.DeleteWorldResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/world.WorldService/deleteWorld',
        request,
        metadata || {},
        this.methodDescriptordeleteWorld,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/world.WorldService/deleteWorld',
    request,
    metadata || {},
    this.methodDescriptordeleteWorld);
  }

  methodDescriptorsearch = new grpcWeb.MethodDescriptor(
    '/world.WorldService/search',
    grpcWeb.MethodType.UNARY,
    world_pb.SearchWorldRequest,
    world_pb.SearchWorldResponse,
    (request: world_pb.SearchWorldRequest) => {
      return request.serializeBinary();
    },
    world_pb.SearchWorldResponse.deserializeBinary
  );

  search(
    request: world_pb.SearchWorldRequest,
    metadata?: grpcWeb.Metadata | null): Promise<world_pb.SearchWorldResponse>;

  search(
    request: world_pb.SearchWorldRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: world_pb.SearchWorldResponse) => void): grpcWeb.ClientReadableStream<world_pb.SearchWorldResponse>;

  search(
    request: world_pb.SearchWorldRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: world_pb.SearchWorldResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/world.WorldService/search',
        request,
        metadata || {},
        this.methodDescriptorsearch,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/world.WorldService/search',
    request,
    metadata || {},
    this.methodDescriptorsearch);
  }

  methodDescriptordropWorldContent = new grpcWeb.MethodDescriptor(
    '/world.WorldService/dropWorldContent',
    grpcWeb.MethodType.UNARY,
    world_pb.DropWorldContentRequest,
    world_pb.DropWorldContentResponse,
    (request: world_pb.DropWorldContentRequest) => {
      return request.serializeBinary();
    },
    world_pb.DropWorldContentResponse.deserializeBinary
  );

  dropWorldContent(
    request: world_pb.DropWorldContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<world_pb.DropWorldContentResponse>;

  dropWorldContent(
    request: world_pb.DropWorldContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: world_pb.DropWorldContentResponse) => void): grpcWeb.ClientReadableStream<world_pb.DropWorldContentResponse>;

  dropWorldContent(
    request: world_pb.DropWorldContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: world_pb.DropWorldContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/world.WorldService/dropWorldContent',
        request,
        metadata || {},
        this.methodDescriptordropWorldContent,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/world.WorldService/dropWorldContent',
    request,
    metadata || {},
    this.methodDescriptordropWorldContent);
  }

  methodDescriptorloadWorldPreset = new grpcWeb.MethodDescriptor(
    '/world.WorldService/loadWorldPreset',
    grpcWeb.MethodType.UNARY,
    world_pb.LoadWorldPresetRequest,
    world_pb.LoadWorldPresetResponse,
    (request: world_pb.LoadWorldPresetRequest) => {
      return request.serializeBinary();
    },
    world_pb.LoadWorldPresetResponse.deserializeBinary
  );

  loadWorldPreset(
    request: world_pb.LoadWorldPresetRequest,
    metadata?: grpcWeb.Metadata | null): Promise<world_pb.LoadWorldPresetResponse>;

  loadWorldPreset(
    request: world_pb.LoadWorldPresetRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: world_pb.LoadWorldPresetResponse) => void): grpcWeb.ClientReadableStream<world_pb.LoadWorldPresetResponse>;

  loadWorldPreset(
    request: world_pb.LoadWorldPresetRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: world_pb.LoadWorldPresetResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/world.WorldService/loadWorldPreset',
        request,
        metadata || {},
        this.methodDescriptorloadWorldPreset,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/world.WorldService/loadWorldPreset',
    request,
    metadata || {},
    this.methodDescriptorloadWorldPreset);
  }

  methodDescriptorgetPresets = new grpcWeb.MethodDescriptor(
    '/world.WorldService/getPresets',
    grpcWeb.MethodType.UNARY,
    world_pb.GetPresetsRequest,
    world_pb.GetPresetsResponse,
    (request: world_pb.GetPresetsRequest) => {
      return request.serializeBinary();
    },
    world_pb.GetPresetsResponse.deserializeBinary
  );

  getPresets(
    request: world_pb.GetPresetsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<world_pb.GetPresetsResponse>;

  getPresets(
    request: world_pb.GetPresetsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: world_pb.GetPresetsResponse) => void): grpcWeb.ClientReadableStream<world_pb.GetPresetsResponse>;

  getPresets(
    request: world_pb.GetPresetsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: world_pb.GetPresetsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/world.WorldService/getPresets',
        request,
        metadata || {},
        this.methodDescriptorgetPresets,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/world.WorldService/getPresets',
    request,
    metadata || {},
    this.methodDescriptorgetPresets);
  }

}

