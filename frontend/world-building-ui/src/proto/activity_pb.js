// source: activity.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var entities_pb = require('./entities_pb.js');
goog.object.extend(proto, entities_pb);
goog.exportSymbol('proto.activity.ActivityClearAllRequest', null, global);
goog.exportSymbol('proto.activity.ActivityClearAllResponse', null, global);
goog.exportSymbol('proto.activity.ActivityCreateRequest', null, global);
goog.exportSymbol('proto.activity.ActivityCreateResponse', null, global);
goog.exportSymbol('proto.activity.ActivityDTO', null, global);
goog.exportSymbol('proto.activity.ActivityEventNameEnumDTO', null, global);
goog.exportSymbol('proto.activity.ActivityHeadRequest', null, global);
goog.exportSymbol('proto.activity.ActivityHeadResponse', null, global);
goog.exportSymbol('proto.activity.ActivitySearchRequest', null, global);
goog.exportSymbol('proto.activity.ActivitySearchResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivitySearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activity.ActivitySearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivitySearchRequest.displayName = 'proto.activity.ActivitySearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivitySearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.activity.ActivitySearchResponse.repeatedFields_, null);
};
goog.inherits(proto.activity.ActivitySearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivitySearchResponse.displayName = 'proto.activity.ActivitySearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivityClearAllRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activity.ActivityClearAllRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivityClearAllRequest.displayName = 'proto.activity.ActivityClearAllRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivityClearAllResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activity.ActivityClearAllResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivityClearAllResponse.displayName = 'proto.activity.ActivityClearAllResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivityCreateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activity.ActivityCreateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivityCreateRequest.displayName = 'proto.activity.ActivityCreateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivityCreateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activity.ActivityCreateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivityCreateResponse.displayName = 'proto.activity.ActivityCreateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivityHeadRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activity.ActivityHeadRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivityHeadRequest.displayName = 'proto.activity.ActivityHeadRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivityHeadResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.activity.ActivityHeadResponse.repeatedFields_, null);
};
goog.inherits(proto.activity.ActivityHeadResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivityHeadResponse.displayName = 'proto.activity.ActivityHeadResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.activity.ActivityDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.activity.ActivityDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.activity.ActivityDTO.displayName = 'proto.activity.ActivityDTO';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivitySearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivitySearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivitySearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivitySearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && entities_pb.ContextDTO.toObject(includeInstance, f),
    search: (f = msg.getSearch()) && entities_pb.SearchQueryDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivitySearchRequest}
 */
proto.activity.ActivitySearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivitySearchRequest;
  return proto.activity.ActivitySearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivitySearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivitySearchRequest}
 */
proto.activity.ActivitySearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new entities_pb.ContextDTO;
      reader.readMessage(value,entities_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 2:
      var value = new entities_pb.SearchQueryDTO;
      reader.readMessage(value,entities_pb.SearchQueryDTO.deserializeBinaryFromReader);
      msg.setSearch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivitySearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivitySearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivitySearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivitySearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      entities_pb.ContextDTO.serializeBinaryToWriter
    );
  }
  f = message.getSearch();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      entities_pb.SearchQueryDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional entities.ContextDTO context = 1;
 * @return {?proto.entities.ContextDTO}
 */
proto.activity.ActivitySearchRequest.prototype.getContext = function() {
  return /** @type{?proto.entities.ContextDTO} */ (
    jspb.Message.getWrapperField(this, entities_pb.ContextDTO, 1));
};


/**
 * @param {?proto.entities.ContextDTO|undefined} value
 * @return {!proto.activity.ActivitySearchRequest} returns this
*/
proto.activity.ActivitySearchRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.activity.ActivitySearchRequest} returns this
 */
proto.activity.ActivitySearchRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activity.ActivitySearchRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional entities.SearchQueryDTO search = 2;
 * @return {?proto.entities.SearchQueryDTO}
 */
proto.activity.ActivitySearchRequest.prototype.getSearch = function() {
  return /** @type{?proto.entities.SearchQueryDTO} */ (
    jspb.Message.getWrapperField(this, entities_pb.SearchQueryDTO, 2));
};


/**
 * @param {?proto.entities.SearchQueryDTO|undefined} value
 * @return {!proto.activity.ActivitySearchRequest} returns this
*/
proto.activity.ActivitySearchRequest.prototype.setSearch = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.activity.ActivitySearchRequest} returns this
 */
proto.activity.ActivitySearchRequest.prototype.clearSearch = function() {
  return this.setSearch(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activity.ActivitySearchRequest.prototype.hasSearch = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.activity.ActivitySearchResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivitySearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivitySearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivitySearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivitySearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    activitiesList: jspb.Message.toObjectList(msg.getActivitiesList(),
    proto.activity.ActivityDTO.toObject, includeInstance),
    totalresults: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalpages: jspb.Message.getFieldWithDefault(msg, 3, 0),
    currentpage: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivitySearchResponse}
 */
proto.activity.ActivitySearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivitySearchResponse;
  return proto.activity.ActivitySearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivitySearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivitySearchResponse}
 */
proto.activity.ActivitySearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.activity.ActivityDTO;
      reader.readMessage(value,proto.activity.ActivityDTO.deserializeBinaryFromReader);
      msg.addActivities(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalresults(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpages(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentpage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivitySearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivitySearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivitySearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivitySearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.activity.ActivityDTO.serializeBinaryToWriter
    );
  }
  f = message.getTotalresults();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalpages();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCurrentpage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * repeated ActivityDTO activities = 1;
 * @return {!Array<!proto.activity.ActivityDTO>}
 */
proto.activity.ActivitySearchResponse.prototype.getActivitiesList = function() {
  return /** @type{!Array<!proto.activity.ActivityDTO>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.activity.ActivityDTO, 1));
};


/**
 * @param {!Array<!proto.activity.ActivityDTO>} value
 * @return {!proto.activity.ActivitySearchResponse} returns this
*/
proto.activity.ActivitySearchResponse.prototype.setActivitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.activity.ActivityDTO=} opt_value
 * @param {number=} opt_index
 * @return {!proto.activity.ActivityDTO}
 */
proto.activity.ActivitySearchResponse.prototype.addActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.activity.ActivityDTO, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.activity.ActivitySearchResponse} returns this
 */
proto.activity.ActivitySearchResponse.prototype.clearActivitiesList = function() {
  return this.setActivitiesList([]);
};


/**
 * optional int32 totalResults = 2;
 * @return {number}
 */
proto.activity.ActivitySearchResponse.prototype.getTotalresults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.activity.ActivitySearchResponse} returns this
 */
proto.activity.ActivitySearchResponse.prototype.setTotalresults = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 totalPages = 3;
 * @return {number}
 */
proto.activity.ActivitySearchResponse.prototype.getTotalpages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.activity.ActivitySearchResponse} returns this
 */
proto.activity.ActivitySearchResponse.prototype.setTotalpages = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 currentPage = 4;
 * @return {number}
 */
proto.activity.ActivitySearchResponse.prototype.getCurrentpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.activity.ActivitySearchResponse} returns this
 */
proto.activity.ActivitySearchResponse.prototype.setCurrentpage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivityClearAllRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivityClearAllRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivityClearAllRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityClearAllRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && entities_pb.ContextDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivityClearAllRequest}
 */
proto.activity.ActivityClearAllRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivityClearAllRequest;
  return proto.activity.ActivityClearAllRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivityClearAllRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivityClearAllRequest}
 */
proto.activity.ActivityClearAllRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new entities_pb.ContextDTO;
      reader.readMessage(value,entities_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivityClearAllRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivityClearAllRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivityClearAllRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityClearAllRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      entities_pb.ContextDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional entities.ContextDTO context = 1;
 * @return {?proto.entities.ContextDTO}
 */
proto.activity.ActivityClearAllRequest.prototype.getContext = function() {
  return /** @type{?proto.entities.ContextDTO} */ (
    jspb.Message.getWrapperField(this, entities_pb.ContextDTO, 1));
};


/**
 * @param {?proto.entities.ContextDTO|undefined} value
 * @return {!proto.activity.ActivityClearAllRequest} returns this
*/
proto.activity.ActivityClearAllRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.activity.ActivityClearAllRequest} returns this
 */
proto.activity.ActivityClearAllRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activity.ActivityClearAllRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivityClearAllResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivityClearAllResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivityClearAllResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityClearAllResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivityClearAllResponse}
 */
proto.activity.ActivityClearAllResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivityClearAllResponse;
  return proto.activity.ActivityClearAllResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivityClearAllResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivityClearAllResponse}
 */
proto.activity.ActivityClearAllResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivityClearAllResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivityClearAllResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivityClearAllResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityClearAllResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.activity.ActivityClearAllResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.activity.ActivityClearAllResponse} returns this
 */
proto.activity.ActivityClearAllResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivityCreateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivityCreateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivityCreateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityCreateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && entities_pb.ContextDTO.toObject(includeInstance, f),
    data: (f = msg.getData()) && proto.activity.ActivityDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivityCreateRequest}
 */
proto.activity.ActivityCreateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivityCreateRequest;
  return proto.activity.ActivityCreateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivityCreateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivityCreateRequest}
 */
proto.activity.ActivityCreateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new entities_pb.ContextDTO;
      reader.readMessage(value,entities_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 2:
      var value = new proto.activity.ActivityDTO;
      reader.readMessage(value,proto.activity.ActivityDTO.deserializeBinaryFromReader);
      msg.setData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivityCreateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivityCreateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivityCreateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityCreateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      entities_pb.ContextDTO.serializeBinaryToWriter
    );
  }
  f = message.getData();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.activity.ActivityDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional entities.ContextDTO context = 1;
 * @return {?proto.entities.ContextDTO}
 */
proto.activity.ActivityCreateRequest.prototype.getContext = function() {
  return /** @type{?proto.entities.ContextDTO} */ (
    jspb.Message.getWrapperField(this, entities_pb.ContextDTO, 1));
};


/**
 * @param {?proto.entities.ContextDTO|undefined} value
 * @return {!proto.activity.ActivityCreateRequest} returns this
*/
proto.activity.ActivityCreateRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.activity.ActivityCreateRequest} returns this
 */
proto.activity.ActivityCreateRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activity.ActivityCreateRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ActivityDTO data = 2;
 * @return {?proto.activity.ActivityDTO}
 */
proto.activity.ActivityCreateRequest.prototype.getData = function() {
  return /** @type{?proto.activity.ActivityDTO} */ (
    jspb.Message.getWrapperField(this, proto.activity.ActivityDTO, 2));
};


/**
 * @param {?proto.activity.ActivityDTO|undefined} value
 * @return {!proto.activity.ActivityCreateRequest} returns this
*/
proto.activity.ActivityCreateRequest.prototype.setData = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.activity.ActivityCreateRequest} returns this
 */
proto.activity.ActivityCreateRequest.prototype.clearData = function() {
  return this.setData(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activity.ActivityCreateRequest.prototype.hasData = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivityCreateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivityCreateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivityCreateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityCreateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivityCreateResponse}
 */
proto.activity.ActivityCreateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivityCreateResponse;
  return proto.activity.ActivityCreateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivityCreateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivityCreateResponse}
 */
proto.activity.ActivityCreateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivityCreateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivityCreateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivityCreateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityCreateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.activity.ActivityCreateResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.activity.ActivityCreateResponse} returns this
 */
proto.activity.ActivityCreateResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivityHeadRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivityHeadRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivityHeadRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityHeadRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && entities_pb.ContextDTO.toObject(includeInstance, f),
    limit: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivityHeadRequest}
 */
proto.activity.ActivityHeadRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivityHeadRequest;
  return proto.activity.ActivityHeadRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivityHeadRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivityHeadRequest}
 */
proto.activity.ActivityHeadRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new entities_pb.ContextDTO;
      reader.readMessage(value,entities_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLimit(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivityHeadRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivityHeadRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivityHeadRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityHeadRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      entities_pb.ContextDTO.serializeBinaryToWriter
    );
  }
  f = message.getLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional entities.ContextDTO context = 1;
 * @return {?proto.entities.ContextDTO}
 */
proto.activity.ActivityHeadRequest.prototype.getContext = function() {
  return /** @type{?proto.entities.ContextDTO} */ (
    jspb.Message.getWrapperField(this, entities_pb.ContextDTO, 1));
};


/**
 * @param {?proto.entities.ContextDTO|undefined} value
 * @return {!proto.activity.ActivityHeadRequest} returns this
*/
proto.activity.ActivityHeadRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.activity.ActivityHeadRequest} returns this
 */
proto.activity.ActivityHeadRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.activity.ActivityHeadRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 limit = 2;
 * @return {number}
 */
proto.activity.ActivityHeadRequest.prototype.getLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.activity.ActivityHeadRequest} returns this
 */
proto.activity.ActivityHeadRequest.prototype.setLimit = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.activity.ActivityHeadResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivityHeadResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivityHeadResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivityHeadResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityHeadResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    activitiesList: jspb.Message.toObjectList(msg.getActivitiesList(),
    proto.activity.ActivityDTO.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivityHeadResponse}
 */
proto.activity.ActivityHeadResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivityHeadResponse;
  return proto.activity.ActivityHeadResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivityHeadResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivityHeadResponse}
 */
proto.activity.ActivityHeadResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.activity.ActivityDTO;
      reader.readMessage(value,proto.activity.ActivityDTO.deserializeBinaryFromReader);
      msg.addActivities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivityHeadResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivityHeadResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivityHeadResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityHeadResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getActivitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.activity.ActivityDTO.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ActivityDTO activities = 1;
 * @return {!Array<!proto.activity.ActivityDTO>}
 */
proto.activity.ActivityHeadResponse.prototype.getActivitiesList = function() {
  return /** @type{!Array<!proto.activity.ActivityDTO>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.activity.ActivityDTO, 1));
};


/**
 * @param {!Array<!proto.activity.ActivityDTO>} value
 * @return {!proto.activity.ActivityHeadResponse} returns this
*/
proto.activity.ActivityHeadResponse.prototype.setActivitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.activity.ActivityDTO=} opt_value
 * @param {number=} opt_index
 * @return {!proto.activity.ActivityDTO}
 */
proto.activity.ActivityHeadResponse.prototype.addActivities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.activity.ActivityDTO, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.activity.ActivityHeadResponse} returns this
 */
proto.activity.ActivityHeadResponse.prototype.clearActivitiesList = function() {
  return this.setActivitiesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.activity.ActivityDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.activity.ActivityDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.activity.ActivityDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    label: jspb.Message.getFieldWithDefault(msg, 2, ""),
    eventname: jspb.Message.getFieldWithDefault(msg, 3, 0),
    relatedtargetentity: jspb.Message.getFieldWithDefault(msg, 4, ""),
    relatedtargetid: jspb.Message.getFieldWithDefault(msg, 5, ""),
    relatedentityname: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdat: jspb.Message.getFieldWithDefault(msg, 7, 0),
    user: jspb.Message.getFieldWithDefault(msg, 8, ""),
    world: jspb.Message.getFieldWithDefault(msg, 9, ""),
    campaign: jspb.Message.getFieldWithDefault(msg, 10, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.activity.ActivityDTO}
 */
proto.activity.ActivityDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.activity.ActivityDTO;
  return proto.activity.ActivityDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.activity.ActivityDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.activity.ActivityDTO}
 */
proto.activity.ActivityDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLabel(value);
      break;
    case 3:
      var value = /** @type {!proto.activity.ActivityEventNameEnumDTO} */ (reader.readEnum());
      msg.setEventname(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelatedtargetentity(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelatedtargetid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setRelatedentityname(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedat(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUser(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setWorld(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setCampaign(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.activity.ActivityDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.activity.ActivityDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.activity.ActivityDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.activity.ActivityDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLabel();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getEventname();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getRelatedtargetentity();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getRelatedtargetid();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRelatedentityname();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedat();
  if (f !== 0) {
    writer.writeInt64(
      7,
      f
    );
  }
  f = message.getUser();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getWorld();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getCampaign();
  if (f.length > 0) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.activity.ActivityDTO.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string label = 2;
 * @return {string}
 */
proto.activity.ActivityDTO.prototype.getLabel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setLabel = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional ActivityEventNameEnumDTO eventName = 3;
 * @return {!proto.activity.ActivityEventNameEnumDTO}
 */
proto.activity.ActivityDTO.prototype.getEventname = function() {
  return /** @type {!proto.activity.ActivityEventNameEnumDTO} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.activity.ActivityEventNameEnumDTO} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setEventname = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string relatedTargetEntity = 4;
 * @return {string}
 */
proto.activity.ActivityDTO.prototype.getRelatedtargetentity = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setRelatedtargetentity = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string relatedTargetId = 5;
 * @return {string}
 */
proto.activity.ActivityDTO.prototype.getRelatedtargetid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setRelatedtargetid = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string relatedEntityName = 6;
 * @return {string}
 */
proto.activity.ActivityDTO.prototype.getRelatedentityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setRelatedentityname = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 createdAt = 7;
 * @return {number}
 */
proto.activity.ActivityDTO.prototype.getCreatedat = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setCreatedat = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional string user = 8;
 * @return {string}
 */
proto.activity.ActivityDTO.prototype.getUser = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setUser = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional string world = 9;
 * @return {string}
 */
proto.activity.ActivityDTO.prototype.getWorld = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setWorld = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string campaign = 10;
 * @return {string}
 */
proto.activity.ActivityDTO.prototype.getCampaign = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/**
 * @param {string} value
 * @return {!proto.activity.ActivityDTO} returns this
 */
proto.activity.ActivityDTO.prototype.setCampaign = function(value) {
  return jspb.Message.setProto3StringField(this, 10, value);
};


/**
 * @enum {number}
 */
proto.activity.ActivityEventNameEnumDTO = {
  CONTENT_CREATED: 0,
  CONTENT_UPDATED: 1,
  CONTENT_DELETED: 2,
  CONTENT_CREATED_BULK: 3,
  CONTENT_UPDATED_BULK: 4,
  CONTENT_DELETED_BULK: 5,
  WORLD_PRESET_LOADED: 6
};

goog.object.extend(exports, proto.activity);
