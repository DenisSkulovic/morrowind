// source: content.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() { return this || window || global || self || Function('return this')(); }).call(null);

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.content.ContentBodyDTO', null, global);
goog.exportSymbol('proto.content.ContentBodyDTO.DataCase', null, global);
goog.exportSymbol('proto.content.ContentStatDTO', null, global);
goog.exportSymbol('proto.content.CreateBulkContentRequest', null, global);
goog.exportSymbol('proto.content.CreateBulkContentResponse', null, global);
goog.exportSymbol('proto.content.CreateContentRequest', null, global);
goog.exportSymbol('proto.content.CreateContentResponse', null, global);
goog.exportSymbol('proto.content.DeleteBulkContentRequest', null, global);
goog.exportSymbol('proto.content.DeleteBulkContentResponse', null, global);
goog.exportSymbol('proto.content.DeleteContentRequest', null, global);
goog.exportSymbol('proto.content.DeleteContentResponse', null, global);
goog.exportSymbol('proto.content.GetContentStatsRequest', null, global);
goog.exportSymbol('proto.content.GetContentStatsResponse', null, global);
goog.exportSymbol('proto.content.SearchContentRequest', null, global);
goog.exportSymbol('proto.content.SearchContentResponse', null, global);
goog.exportSymbol('proto.content.UpdateBulkContentRequest', null, global);
goog.exportSymbol('proto.content.UpdateBulkContentResponse', null, global);
goog.exportSymbol('proto.content.UpdateContentRequest', null, global);
goog.exportSymbol('proto.content.UpdateContentResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.UpdateContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.UpdateContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.UpdateContentRequest.displayName = 'proto.content.UpdateContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.UpdateContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.UpdateContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.UpdateContentResponse.displayName = 'proto.content.UpdateContentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.DeleteContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.DeleteContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.DeleteContentRequest.displayName = 'proto.content.DeleteContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.DeleteContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.DeleteContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.DeleteContentResponse.displayName = 'proto.content.DeleteContentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.SearchContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.SearchContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.SearchContentRequest.displayName = 'proto.content.SearchContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.SearchContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.SearchContentResponse.repeatedFields_, null);
};
goog.inherits(proto.content.SearchContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.SearchContentResponse.displayName = 'proto.content.SearchContentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.GetContentStatsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.GetContentStatsRequest.repeatedFields_, null);
};
goog.inherits(proto.content.GetContentStatsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.GetContentStatsRequest.displayName = 'proto.content.GetContentStatsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.GetContentStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.GetContentStatsResponse.repeatedFields_, null);
};
goog.inherits(proto.content.GetContentStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.GetContentStatsResponse.displayName = 'proto.content.GetContentStatsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentStatDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.ContentStatDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentStatDTO.displayName = 'proto.content.ContentStatDTO';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.CreateBulkContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.CreateBulkContentRequest.repeatedFields_, null);
};
goog.inherits(proto.content.CreateBulkContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.CreateBulkContentRequest.displayName = 'proto.content.CreateBulkContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.CreateBulkContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.CreateBulkContentResponse.repeatedFields_, null);
};
goog.inherits(proto.content.CreateBulkContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.CreateBulkContentResponse.displayName = 'proto.content.CreateBulkContentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.UpdateBulkContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.UpdateBulkContentRequest.repeatedFields_, null);
};
goog.inherits(proto.content.UpdateBulkContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.UpdateBulkContentRequest.displayName = 'proto.content.UpdateBulkContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.UpdateBulkContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.UpdateBulkContentResponse.repeatedFields_, null);
};
goog.inherits(proto.content.UpdateBulkContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.UpdateBulkContentResponse.displayName = 'proto.content.UpdateBulkContentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.DeleteBulkContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.DeleteBulkContentRequest.repeatedFields_, null);
};
goog.inherits(proto.content.DeleteBulkContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.DeleteBulkContentRequest.displayName = 'proto.content.DeleteBulkContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.DeleteBulkContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.content.DeleteBulkContentResponse.repeatedFields_, null);
};
goog.inherits(proto.content.DeleteBulkContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.DeleteBulkContentResponse.displayName = 'proto.content.DeleteBulkContentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.CreateContentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.CreateContentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.CreateContentRequest.displayName = 'proto.content.CreateContentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.CreateContentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.content.CreateContentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.CreateContentResponse.displayName = 'proto.content.CreateContentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.content.ContentBodyDTO = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.content.ContentBodyDTO.oneofGroups_);
};
goog.inherits(proto.content.ContentBodyDTO, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.content.ContentBodyDTO.displayName = 'proto.content.ContentBodyDTO';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.UpdateContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.UpdateContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.UpdateContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.UpdateContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentbody: (f = msg.getContentbody()) && proto.content.ContentBodyDTO.toObject(includeInstance, f),
    entityname: jspb.Message.getFieldWithDefault(msg, 2, ""),
    context: (f = msg.getContext()) && common_pb.ContextDTO.toObject(includeInstance, f),
    source: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.UpdateContentRequest}
 */
proto.content.UpdateContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.UpdateContentRequest;
  return proto.content.UpdateContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.UpdateContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.UpdateContentRequest}
 */
proto.content.UpdateContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.ContentBodyDTO;
      reader.readMessage(value,proto.content.ContentBodyDTO.deserializeBinaryFromReader);
      msg.setContentbody(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityname(value);
      break;
    case 3:
      var value = new common_pb.ContextDTO;
      reader.readMessage(value,common_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 4:
      var value = /** @type {!proto.common.DataSourceEnumDTO} */ (reader.readEnum());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.UpdateContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.UpdateContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.UpdateContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.UpdateContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentbody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.content.ContentBodyDTO.serializeBinaryToWriter
    );
  }
  f = message.getEntityname();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.ContextDTO.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional ContentBodyDTO contentBody = 1;
 * @return {?proto.content.ContentBodyDTO}
 */
proto.content.UpdateContentRequest.prototype.getContentbody = function() {
  return /** @type{?proto.content.ContentBodyDTO} */ (
    jspb.Message.getWrapperField(this, proto.content.ContentBodyDTO, 1));
};


/**
 * @param {?proto.content.ContentBodyDTO|undefined} value
 * @return {!proto.content.UpdateContentRequest} returns this
*/
proto.content.UpdateContentRequest.prototype.setContentbody = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.UpdateContentRequest} returns this
 */
proto.content.UpdateContentRequest.prototype.clearContentbody = function() {
  return this.setContentbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.UpdateContentRequest.prototype.hasContentbody = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string entityName = 2;
 * @return {string}
 */
proto.content.UpdateContentRequest.prototype.getEntityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.UpdateContentRequest} returns this
 */
proto.content.UpdateContentRequest.prototype.setEntityname = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional common.ContextDTO context = 3;
 * @return {?proto.common.ContextDTO}
 */
proto.content.UpdateContentRequest.prototype.getContext = function() {
  return /** @type{?proto.common.ContextDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ContextDTO, 3));
};


/**
 * @param {?proto.common.ContextDTO|undefined} value
 * @return {!proto.content.UpdateContentRequest} returns this
*/
proto.content.UpdateContentRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.UpdateContentRequest} returns this
 */
proto.content.UpdateContentRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.UpdateContentRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.DataSourceEnumDTO source = 4;
 * @return {!proto.common.DataSourceEnumDTO}
 */
proto.content.UpdateContentRequest.prototype.getSource = function() {
  return /** @type {!proto.common.DataSourceEnumDTO} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.common.DataSourceEnumDTO} value
 * @return {!proto.content.UpdateContentRequest} returns this
 */
proto.content.UpdateContentRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.UpdateContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.UpdateContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.UpdateContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.UpdateContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentbody: (f = msg.getContentbody()) && proto.content.ContentBodyDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.UpdateContentResponse}
 */
proto.content.UpdateContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.UpdateContentResponse;
  return proto.content.UpdateContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.UpdateContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.UpdateContentResponse}
 */
proto.content.UpdateContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.ContentBodyDTO;
      reader.readMessage(value,proto.content.ContentBodyDTO.deserializeBinaryFromReader);
      msg.setContentbody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.UpdateContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.UpdateContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.UpdateContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.UpdateContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentbody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.content.ContentBodyDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional ContentBodyDTO contentBody = 1;
 * @return {?proto.content.ContentBodyDTO}
 */
proto.content.UpdateContentResponse.prototype.getContentbody = function() {
  return /** @type{?proto.content.ContentBodyDTO} */ (
    jspb.Message.getWrapperField(this, proto.content.ContentBodyDTO, 1));
};


/**
 * @param {?proto.content.ContentBodyDTO|undefined} value
 * @return {!proto.content.UpdateContentResponse} returns this
*/
proto.content.UpdateContentResponse.prototype.setContentbody = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.UpdateContentResponse} returns this
 */
proto.content.UpdateContentResponse.prototype.clearContentbody = function() {
  return this.setContentbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.UpdateContentResponse.prototype.hasContentbody = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.DeleteContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.DeleteContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.DeleteContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.DeleteContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    id: jspb.Message.getFieldWithDefault(msg, 2, ""),
    context: (f = msg.getContext()) && common_pb.ContextDTO.toObject(includeInstance, f),
    source: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.DeleteContentRequest}
 */
proto.content.DeleteContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.DeleteContentRequest;
  return proto.content.DeleteContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.DeleteContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.DeleteContentRequest}
 */
proto.content.DeleteContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityname(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 3:
      var value = new common_pb.ContextDTO;
      reader.readMessage(value,common_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 4:
      var value = /** @type {!proto.common.DataSourceEnumDTO} */ (reader.readEnum());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.DeleteContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.DeleteContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.DeleteContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.DeleteContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.ContextDTO.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string entityName = 1;
 * @return {string}
 */
proto.content.DeleteContentRequest.prototype.getEntityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.DeleteContentRequest} returns this
 */
proto.content.DeleteContentRequest.prototype.setEntityname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.content.DeleteContentRequest.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.DeleteContentRequest} returns this
 */
proto.content.DeleteContentRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional common.ContextDTO context = 3;
 * @return {?proto.common.ContextDTO}
 */
proto.content.DeleteContentRequest.prototype.getContext = function() {
  return /** @type{?proto.common.ContextDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ContextDTO, 3));
};


/**
 * @param {?proto.common.ContextDTO|undefined} value
 * @return {!proto.content.DeleteContentRequest} returns this
*/
proto.content.DeleteContentRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.DeleteContentRequest} returns this
 */
proto.content.DeleteContentRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.DeleteContentRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.DataSourceEnumDTO source = 4;
 * @return {!proto.common.DataSourceEnumDTO}
 */
proto.content.DeleteContentRequest.prototype.getSource = function() {
  return /** @type {!proto.common.DataSourceEnumDTO} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.common.DataSourceEnumDTO} value
 * @return {!proto.content.DeleteContentRequest} returns this
 */
proto.content.DeleteContentRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.DeleteContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.DeleteContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.DeleteContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.DeleteContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    success: jspb.Message.getBooleanFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.DeleteContentResponse}
 */
proto.content.DeleteContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.DeleteContentResponse;
  return proto.content.DeleteContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.DeleteContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.DeleteContentResponse}
 */
proto.content.DeleteContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setSuccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.DeleteContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.DeleteContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.DeleteContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.DeleteContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSuccess();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool success = 1;
 * @return {boolean}
 */
proto.content.DeleteContentResponse.prototype.getSuccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 1, false));
};


/**
 * @param {boolean} value
 * @return {!proto.content.DeleteContentResponse} returns this
 */
proto.content.DeleteContentResponse.prototype.setSuccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.SearchContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.SearchContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.SearchContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.SearchContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityname: jspb.Message.getFieldWithDefault(msg, 1, ""),
    query: (f = msg.getQuery()) && common_pb.SearchQueryDTO.toObject(includeInstance, f),
    context: (f = msg.getContext()) && common_pb.ContextDTO.toObject(includeInstance, f),
    source: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.SearchContentRequest}
 */
proto.content.SearchContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.SearchContentRequest;
  return proto.content.SearchContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.SearchContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.SearchContentRequest}
 */
proto.content.SearchContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityname(value);
      break;
    case 2:
      var value = new common_pb.SearchQueryDTO;
      reader.readMessage(value,common_pb.SearchQueryDTO.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    case 3:
      var value = new common_pb.ContextDTO;
      reader.readMessage(value,common_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 4:
      var value = /** @type {!proto.common.DataSourceEnumDTO} */ (reader.readEnum());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.SearchContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.SearchContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.SearchContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.SearchContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityname();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.SearchQueryDTO.serializeBinaryToWriter
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.ContextDTO.serializeBinaryToWriter
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string entityName = 1;
 * @return {string}
 */
proto.content.SearchContentRequest.prototype.getEntityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.SearchContentRequest} returns this
 */
proto.content.SearchContentRequest.prototype.setEntityname = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional common.SearchQueryDTO query = 2;
 * @return {?proto.common.SearchQueryDTO}
 */
proto.content.SearchContentRequest.prototype.getQuery = function() {
  return /** @type{?proto.common.SearchQueryDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.SearchQueryDTO, 2));
};


/**
 * @param {?proto.common.SearchQueryDTO|undefined} value
 * @return {!proto.content.SearchContentRequest} returns this
*/
proto.content.SearchContentRequest.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.SearchContentRequest} returns this
 */
proto.content.SearchContentRequest.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.SearchContentRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.ContextDTO context = 3;
 * @return {?proto.common.ContextDTO}
 */
proto.content.SearchContentRequest.prototype.getContext = function() {
  return /** @type{?proto.common.ContextDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ContextDTO, 3));
};


/**
 * @param {?proto.common.ContextDTO|undefined} value
 * @return {!proto.content.SearchContentRequest} returns this
*/
proto.content.SearchContentRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.SearchContentRequest} returns this
 */
proto.content.SearchContentRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.SearchContentRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.DataSourceEnumDTO source = 4;
 * @return {!proto.common.DataSourceEnumDTO}
 */
proto.content.SearchContentRequest.prototype.getSource = function() {
  return /** @type {!proto.common.DataSourceEnumDTO} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.common.DataSourceEnumDTO} value
 * @return {!proto.content.SearchContentRequest} returns this
 */
proto.content.SearchContentRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.SearchContentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.SearchContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.SearchContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.SearchContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.SearchContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.content.ContentBodyDTO.toObject, includeInstance),
    totalresults: jspb.Message.getFieldWithDefault(msg, 2, 0),
    totalpages: jspb.Message.getFieldWithDefault(msg, 3, 0),
    currentpage: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.SearchContentResponse}
 */
proto.content.SearchContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.SearchContentResponse;
  return proto.content.SearchContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.SearchContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.SearchContentResponse}
 */
proto.content.SearchContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.ContentBodyDTO;
      reader.readMessage(value,proto.content.ContentBodyDTO.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalresults(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setTotalpages(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCurrentpage(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.SearchContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.SearchContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.SearchContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.SearchContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.ContentBodyDTO.serializeBinaryToWriter
    );
  }
  f = message.getTotalresults();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getTotalpages();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCurrentpage();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * repeated ContentBodyDTO results = 1;
 * @return {!Array<!proto.content.ContentBodyDTO>}
 */
proto.content.SearchContentResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.content.ContentBodyDTO>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.ContentBodyDTO, 1));
};


/**
 * @param {!Array<!proto.content.ContentBodyDTO>} value
 * @return {!proto.content.SearchContentResponse} returns this
*/
proto.content.SearchContentResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.ContentBodyDTO=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.ContentBodyDTO}
 */
proto.content.SearchContentResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.ContentBodyDTO, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.SearchContentResponse} returns this
 */
proto.content.SearchContentResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};


/**
 * optional int32 totalResults = 2;
 * @return {number}
 */
proto.content.SearchContentResponse.prototype.getTotalresults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.SearchContentResponse} returns this
 */
proto.content.SearchContentResponse.prototype.setTotalresults = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int32 totalPages = 3;
 * @return {number}
 */
proto.content.SearchContentResponse.prototype.getTotalpages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.SearchContentResponse} returns this
 */
proto.content.SearchContentResponse.prototype.setTotalpages = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 currentPage = 4;
 * @return {number}
 */
proto.content.SearchContentResponse.prototype.getCurrentpage = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.SearchContentResponse} returns this
 */
proto.content.SearchContentResponse.prototype.setCurrentpage = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.GetContentStatsRequest.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.GetContentStatsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.GetContentStatsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.GetContentStatsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.GetContentStatsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    context: (f = msg.getContext()) && common_pb.ContextDTO.toObject(includeInstance, f),
    entitynamesList: (f = jspb.Message.getRepeatedField(msg, 2)) == null ? undefined : f,
    source: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.GetContentStatsRequest}
 */
proto.content.GetContentStatsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.GetContentStatsRequest;
  return proto.content.GetContentStatsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.GetContentStatsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.GetContentStatsRequest}
 */
proto.content.GetContentStatsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ContextDTO;
      reader.readMessage(value,common_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addEntitynames(value);
      break;
    case 3:
      var value = /** @type {!proto.common.DataSourceEnumDTO} */ (reader.readEnum());
      msg.setSource(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.GetContentStatsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.GetContentStatsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.GetContentStatsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.GetContentStatsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ContextDTO.serializeBinaryToWriter
    );
  }
  f = message.getEntitynamesList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional common.ContextDTO context = 1;
 * @return {?proto.common.ContextDTO}
 */
proto.content.GetContentStatsRequest.prototype.getContext = function() {
  return /** @type{?proto.common.ContextDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ContextDTO, 1));
};


/**
 * @param {?proto.common.ContextDTO|undefined} value
 * @return {!proto.content.GetContentStatsRequest} returns this
*/
proto.content.GetContentStatsRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.GetContentStatsRequest} returns this
 */
proto.content.GetContentStatsRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.GetContentStatsRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string entityNames = 2;
 * @return {!Array<string>}
 */
proto.content.GetContentStatsRequest.prototype.getEntitynamesList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.content.GetContentStatsRequest} returns this
 */
proto.content.GetContentStatsRequest.prototype.setEntitynamesList = function(value) {
  return jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.content.GetContentStatsRequest} returns this
 */
proto.content.GetContentStatsRequest.prototype.addEntitynames = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.GetContentStatsRequest} returns this
 */
proto.content.GetContentStatsRequest.prototype.clearEntitynamesList = function() {
  return this.setEntitynamesList([]);
};


/**
 * optional common.DataSourceEnumDTO source = 3;
 * @return {!proto.common.DataSourceEnumDTO}
 */
proto.content.GetContentStatsRequest.prototype.getSource = function() {
  return /** @type {!proto.common.DataSourceEnumDTO} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.common.DataSourceEnumDTO} value
 * @return {!proto.content.GetContentStatsRequest} returns this
 */
proto.content.GetContentStatsRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.GetContentStatsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.GetContentStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.GetContentStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.GetContentStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.GetContentStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    statsList: jspb.Message.toObjectList(msg.getStatsList(),
    proto.content.ContentStatDTO.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.GetContentStatsResponse}
 */
proto.content.GetContentStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.GetContentStatsResponse;
  return proto.content.GetContentStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.GetContentStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.GetContentStatsResponse}
 */
proto.content.GetContentStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.ContentStatDTO;
      reader.readMessage(value,proto.content.ContentStatDTO.deserializeBinaryFromReader);
      msg.addStats(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.GetContentStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.GetContentStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.GetContentStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.GetContentStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStatsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.ContentStatDTO.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ContentStatDTO stats = 1;
 * @return {!Array<!proto.content.ContentStatDTO>}
 */
proto.content.GetContentStatsResponse.prototype.getStatsList = function() {
  return /** @type{!Array<!proto.content.ContentStatDTO>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.ContentStatDTO, 1));
};


/**
 * @param {!Array<!proto.content.ContentStatDTO>} value
 * @return {!proto.content.GetContentStatsResponse} returns this
*/
proto.content.GetContentStatsResponse.prototype.setStatsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.ContentStatDTO=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.ContentStatDTO}
 */
proto.content.GetContentStatsResponse.prototype.addStats = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.ContentStatDTO, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.GetContentStatsResponse} returns this
 */
proto.content.GetContentStatsResponse.prototype.clearStatsList = function() {
  return this.setStatsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentStatDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentStatDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentStatDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentStatDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    count: jspb.Message.getFieldWithDefault(msg, 3, 0),
    icon: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentStatDTO}
 */
proto.content.ContentStatDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentStatDTO;
  return proto.content.ContentStatDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentStatDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentStatDTO}
 */
proto.content.ContentStatDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIcon(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentStatDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentStatDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentStatDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentStatDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getIcon();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.content.ContentStatDTO.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentStatDTO} returns this
 */
proto.content.ContentStatDTO.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.content.ContentStatDTO.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentStatDTO} returns this
 */
proto.content.ContentStatDTO.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 count = 3;
 * @return {number}
 */
proto.content.ContentStatDTO.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.content.ContentStatDTO} returns this
 */
proto.content.ContentStatDTO.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional string icon = 4;
 * @return {string}
 */
proto.content.ContentStatDTO.prototype.getIcon = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.ContentStatDTO} returns this
 */
proto.content.ContentStatDTO.prototype.setIcon = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.CreateBulkContentRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.CreateBulkContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.CreateBulkContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.CreateBulkContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.CreateBulkContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestsList: jspb.Message.toObjectList(msg.getRequestsList(),
    proto.content.CreateContentRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.CreateBulkContentRequest}
 */
proto.content.CreateBulkContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.CreateBulkContentRequest;
  return proto.content.CreateBulkContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.CreateBulkContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.CreateBulkContentRequest}
 */
proto.content.CreateBulkContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.CreateContentRequest;
      reader.readMessage(value,proto.content.CreateContentRequest.deserializeBinaryFromReader);
      msg.addRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.CreateBulkContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.CreateBulkContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.CreateBulkContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.CreateBulkContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.CreateContentRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CreateContentRequest requests = 1;
 * @return {!Array<!proto.content.CreateContentRequest>}
 */
proto.content.CreateBulkContentRequest.prototype.getRequestsList = function() {
  return /** @type{!Array<!proto.content.CreateContentRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.CreateContentRequest, 1));
};


/**
 * @param {!Array<!proto.content.CreateContentRequest>} value
 * @return {!proto.content.CreateBulkContentRequest} returns this
*/
proto.content.CreateBulkContentRequest.prototype.setRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.CreateContentRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.CreateContentRequest}
 */
proto.content.CreateBulkContentRequest.prototype.addRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.CreateContentRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.CreateBulkContentRequest} returns this
 */
proto.content.CreateBulkContentRequest.prototype.clearRequestsList = function() {
  return this.setRequestsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.CreateBulkContentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.CreateBulkContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.CreateBulkContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.CreateBulkContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.CreateBulkContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.content.CreateContentResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.CreateBulkContentResponse}
 */
proto.content.CreateBulkContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.CreateBulkContentResponse;
  return proto.content.CreateBulkContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.CreateBulkContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.CreateBulkContentResponse}
 */
proto.content.CreateBulkContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.CreateContentResponse;
      reader.readMessage(value,proto.content.CreateContentResponse.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.CreateBulkContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.CreateBulkContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.CreateBulkContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.CreateBulkContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.CreateContentResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated CreateContentResponse responses = 1;
 * @return {!Array<!proto.content.CreateContentResponse>}
 */
proto.content.CreateBulkContentResponse.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.content.CreateContentResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.CreateContentResponse, 1));
};


/**
 * @param {!Array<!proto.content.CreateContentResponse>} value
 * @return {!proto.content.CreateBulkContentResponse} returns this
*/
proto.content.CreateBulkContentResponse.prototype.setResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.CreateContentResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.CreateContentResponse}
 */
proto.content.CreateBulkContentResponse.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.CreateContentResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.CreateBulkContentResponse} returns this
 */
proto.content.CreateBulkContentResponse.prototype.clearResponsesList = function() {
  return this.setResponsesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.UpdateBulkContentRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.UpdateBulkContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.UpdateBulkContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.UpdateBulkContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.UpdateBulkContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestsList: jspb.Message.toObjectList(msg.getRequestsList(),
    proto.content.UpdateContentRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.UpdateBulkContentRequest}
 */
proto.content.UpdateBulkContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.UpdateBulkContentRequest;
  return proto.content.UpdateBulkContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.UpdateBulkContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.UpdateBulkContentRequest}
 */
proto.content.UpdateBulkContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.UpdateContentRequest;
      reader.readMessage(value,proto.content.UpdateContentRequest.deserializeBinaryFromReader);
      msg.addRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.UpdateBulkContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.UpdateBulkContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.UpdateBulkContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.UpdateBulkContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.UpdateContentRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UpdateContentRequest requests = 1;
 * @return {!Array<!proto.content.UpdateContentRequest>}
 */
proto.content.UpdateBulkContentRequest.prototype.getRequestsList = function() {
  return /** @type{!Array<!proto.content.UpdateContentRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.UpdateContentRequest, 1));
};


/**
 * @param {!Array<!proto.content.UpdateContentRequest>} value
 * @return {!proto.content.UpdateBulkContentRequest} returns this
*/
proto.content.UpdateBulkContentRequest.prototype.setRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.UpdateContentRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.UpdateContentRequest}
 */
proto.content.UpdateBulkContentRequest.prototype.addRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.UpdateContentRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.UpdateBulkContentRequest} returns this
 */
proto.content.UpdateBulkContentRequest.prototype.clearRequestsList = function() {
  return this.setRequestsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.UpdateBulkContentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.UpdateBulkContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.UpdateBulkContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.UpdateBulkContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.UpdateBulkContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.content.UpdateContentResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.UpdateBulkContentResponse}
 */
proto.content.UpdateBulkContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.UpdateBulkContentResponse;
  return proto.content.UpdateBulkContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.UpdateBulkContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.UpdateBulkContentResponse}
 */
proto.content.UpdateBulkContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.UpdateContentResponse;
      reader.readMessage(value,proto.content.UpdateContentResponse.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.UpdateBulkContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.UpdateBulkContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.UpdateBulkContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.UpdateBulkContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.UpdateContentResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated UpdateContentResponse responses = 1;
 * @return {!Array<!proto.content.UpdateContentResponse>}
 */
proto.content.UpdateBulkContentResponse.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.content.UpdateContentResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.UpdateContentResponse, 1));
};


/**
 * @param {!Array<!proto.content.UpdateContentResponse>} value
 * @return {!proto.content.UpdateBulkContentResponse} returns this
*/
proto.content.UpdateBulkContentResponse.prototype.setResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.UpdateContentResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.UpdateContentResponse}
 */
proto.content.UpdateBulkContentResponse.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.UpdateContentResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.UpdateBulkContentResponse} returns this
 */
proto.content.UpdateBulkContentResponse.prototype.clearResponsesList = function() {
  return this.setResponsesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.DeleteBulkContentRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.DeleteBulkContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.DeleteBulkContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.DeleteBulkContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.DeleteBulkContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestsList: jspb.Message.toObjectList(msg.getRequestsList(),
    proto.content.DeleteContentRequest.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.DeleteBulkContentRequest}
 */
proto.content.DeleteBulkContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.DeleteBulkContentRequest;
  return proto.content.DeleteBulkContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.DeleteBulkContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.DeleteBulkContentRequest}
 */
proto.content.DeleteBulkContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.DeleteContentRequest;
      reader.readMessage(value,proto.content.DeleteContentRequest.deserializeBinaryFromReader);
      msg.addRequests(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.DeleteBulkContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.DeleteBulkContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.DeleteBulkContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.DeleteBulkContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.DeleteContentRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DeleteContentRequest requests = 1;
 * @return {!Array<!proto.content.DeleteContentRequest>}
 */
proto.content.DeleteBulkContentRequest.prototype.getRequestsList = function() {
  return /** @type{!Array<!proto.content.DeleteContentRequest>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.DeleteContentRequest, 1));
};


/**
 * @param {!Array<!proto.content.DeleteContentRequest>} value
 * @return {!proto.content.DeleteBulkContentRequest} returns this
*/
proto.content.DeleteBulkContentRequest.prototype.setRequestsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.DeleteContentRequest=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.DeleteContentRequest}
 */
proto.content.DeleteBulkContentRequest.prototype.addRequests = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.DeleteContentRequest, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.DeleteBulkContentRequest} returns this
 */
proto.content.DeleteBulkContentRequest.prototype.clearRequestsList = function() {
  return this.setRequestsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.content.DeleteBulkContentResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.DeleteBulkContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.DeleteBulkContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.DeleteBulkContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.DeleteBulkContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    responsesList: jspb.Message.toObjectList(msg.getResponsesList(),
    proto.content.DeleteContentResponse.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.DeleteBulkContentResponse}
 */
proto.content.DeleteBulkContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.DeleteBulkContentResponse;
  return proto.content.DeleteBulkContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.DeleteBulkContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.DeleteBulkContentResponse}
 */
proto.content.DeleteBulkContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.DeleteContentResponse;
      reader.readMessage(value,proto.content.DeleteContentResponse.deserializeBinaryFromReader);
      msg.addResponses(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.DeleteBulkContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.DeleteBulkContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.DeleteBulkContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.DeleteBulkContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponsesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.content.DeleteContentResponse.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DeleteContentResponse responses = 1;
 * @return {!Array<!proto.content.DeleteContentResponse>}
 */
proto.content.DeleteBulkContentResponse.prototype.getResponsesList = function() {
  return /** @type{!Array<!proto.content.DeleteContentResponse>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.content.DeleteContentResponse, 1));
};


/**
 * @param {!Array<!proto.content.DeleteContentResponse>} value
 * @return {!proto.content.DeleteBulkContentResponse} returns this
*/
proto.content.DeleteBulkContentResponse.prototype.setResponsesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.content.DeleteContentResponse=} opt_value
 * @param {number=} opt_index
 * @return {!proto.content.DeleteContentResponse}
 */
proto.content.DeleteBulkContentResponse.prototype.addResponses = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.content.DeleteContentResponse, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.content.DeleteBulkContentResponse} returns this
 */
proto.content.DeleteBulkContentResponse.prototype.clearResponsesList = function() {
  return this.setResponsesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.CreateContentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.content.CreateContentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.CreateContentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.CreateContentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    source: jspb.Message.getFieldWithDefault(msg, 1, 0),
    contentbody: (f = msg.getContentbody()) && proto.content.ContentBodyDTO.toObject(includeInstance, f),
    entityname: jspb.Message.getFieldWithDefault(msg, 3, ""),
    context: (f = msg.getContext()) && common_pb.ContextDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.CreateContentRequest}
 */
proto.content.CreateContentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.CreateContentRequest;
  return proto.content.CreateContentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.CreateContentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.CreateContentRequest}
 */
proto.content.CreateContentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.common.DataSourceEnumDTO} */ (reader.readEnum());
      msg.setSource(value);
      break;
    case 2:
      var value = new proto.content.ContentBodyDTO;
      reader.readMessage(value,proto.content.ContentBodyDTO.deserializeBinaryFromReader);
      msg.setContentbody(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setEntityname(value);
      break;
    case 4:
      var value = new common_pb.ContextDTO;
      reader.readMessage(value,common_pb.ContextDTO.deserializeBinaryFromReader);
      msg.setContext(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.CreateContentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.CreateContentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.CreateContentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.CreateContentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSource();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getContentbody();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.content.ContentBodyDTO.serializeBinaryToWriter
    );
  }
  f = message.getEntityname();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getContext();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.ContextDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.DataSourceEnumDTO source = 1;
 * @return {!proto.common.DataSourceEnumDTO}
 */
proto.content.CreateContentRequest.prototype.getSource = function() {
  return /** @type {!proto.common.DataSourceEnumDTO} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.common.DataSourceEnumDTO} value
 * @return {!proto.content.CreateContentRequest} returns this
 */
proto.content.CreateContentRequest.prototype.setSource = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional ContentBodyDTO contentBody = 2;
 * @return {?proto.content.ContentBodyDTO}
 */
proto.content.CreateContentRequest.prototype.getContentbody = function() {
  return /** @type{?proto.content.ContentBodyDTO} */ (
    jspb.Message.getWrapperField(this, proto.content.ContentBodyDTO, 2));
};


/**
 * @param {?proto.content.ContentBodyDTO|undefined} value
 * @return {!proto.content.CreateContentRequest} returns this
*/
proto.content.CreateContentRequest.prototype.setContentbody = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.CreateContentRequest} returns this
 */
proto.content.CreateContentRequest.prototype.clearContentbody = function() {
  return this.setContentbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.CreateContentRequest.prototype.hasContentbody = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string entityName = 3;
 * @return {string}
 */
proto.content.CreateContentRequest.prototype.getEntityname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.content.CreateContentRequest} returns this
 */
proto.content.CreateContentRequest.prototype.setEntityname = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional common.ContextDTO context = 4;
 * @return {?proto.common.ContextDTO}
 */
proto.content.CreateContentRequest.prototype.getContext = function() {
  return /** @type{?proto.common.ContextDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ContextDTO, 4));
};


/**
 * @param {?proto.common.ContextDTO|undefined} value
 * @return {!proto.content.CreateContentRequest} returns this
*/
proto.content.CreateContentRequest.prototype.setContext = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.CreateContentRequest} returns this
 */
proto.content.CreateContentRequest.prototype.clearContext = function() {
  return this.setContext(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.CreateContentRequest.prototype.hasContext = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.CreateContentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.content.CreateContentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.CreateContentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.CreateContentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    contentbody: (f = msg.getContentbody()) && proto.content.ContentBodyDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.CreateContentResponse}
 */
proto.content.CreateContentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.CreateContentResponse;
  return proto.content.CreateContentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.CreateContentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.CreateContentResponse}
 */
proto.content.CreateContentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.content.ContentBodyDTO;
      reader.readMessage(value,proto.content.ContentBodyDTO.deserializeBinaryFromReader);
      msg.setContentbody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.CreateContentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.CreateContentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.CreateContentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.CreateContentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getContentbody();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.content.ContentBodyDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional ContentBodyDTO contentBody = 1;
 * @return {?proto.content.ContentBodyDTO}
 */
proto.content.CreateContentResponse.prototype.getContentbody = function() {
  return /** @type{?proto.content.ContentBodyDTO} */ (
    jspb.Message.getWrapperField(this, proto.content.ContentBodyDTO, 1));
};


/**
 * @param {?proto.content.ContentBodyDTO|undefined} value
 * @return {!proto.content.CreateContentResponse} returns this
*/
proto.content.CreateContentResponse.prototype.setContentbody = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.CreateContentResponse} returns this
 */
proto.content.CreateContentResponse.prototype.clearContentbody = function() {
  return this.setContentbody(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.CreateContentResponse.prototype.hasContentbody = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.content.ContentBodyDTO.oneofGroups_ = [[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31]];

/**
 * @enum {number}
 */
proto.content.ContentBodyDTO.DataCase = {
  DATA_NOT_SET: 0,
  ITEM: 1,
  PASTEXPERIENCE: 2,
  CHARACTERMEMORY: 3,
  MEMORY: 4,
  MEMORYPOOL: 5,
  MEMORYPOOLENTRY: 6,
  SKILL: 7,
  SKILLSET: 8,
  EQUIPMENTSLOT: 9,
  STORAGESLOT: 10,
  TRAIT: 11,
  ADDICTION: 12,
  BACKGROUND: 13,
  BIRTHSIGN: 14,
  CHARACTER: 15,
  CHARACTERGENINSTRUCTION: 16,
  CHARACTERGROUPGENINSTRUCTION: 17,
  CHARACTERPROFESSION: 18,
  DISEASE: 19,
  EFFECT: 20,
  FACT: 21,
  FACTION: 22,
  ITEMSET: 23,
  MOOD: 24,
  NEED: 25,
  PERSONALITYPROFILE: 26,
  RACE: 27,
  RELIGION: 28,
  RESISTANCE: 29,
  STATUS: 30,
  TAG: 31
};

/**
 * @return {proto.content.ContentBodyDTO.DataCase}
 */
proto.content.ContentBodyDTO.prototype.getDataCase = function() {
  return /** @type {proto.content.ContentBodyDTO.DataCase} */(jspb.Message.computeOneofCase(this, proto.content.ContentBodyDTO.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.content.ContentBodyDTO.prototype.toObject = function(opt_includeInstance) {
  return proto.content.ContentBodyDTO.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.content.ContentBodyDTO} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentBodyDTO.toObject = function(includeInstance, msg) {
  var f, obj = {
    item: (f = msg.getItem()) && common_pb.ItemDTO.toObject(includeInstance, f),
    pastexperience: (f = msg.getPastexperience()) && common_pb.PastExperienceDTO.toObject(includeInstance, f),
    charactermemory: (f = msg.getCharactermemory()) && common_pb.CharacterMemoryDTO.toObject(includeInstance, f),
    memory: (f = msg.getMemory()) && common_pb.MemoryDTO.toObject(includeInstance, f),
    memorypool: (f = msg.getMemorypool()) && common_pb.MemoryPoolDTO.toObject(includeInstance, f),
    memorypoolentry: (f = msg.getMemorypoolentry()) && common_pb.MemoryPoolEntryDTO.toObject(includeInstance, f),
    skill: (f = msg.getSkill()) && common_pb.SkillDTO.toObject(includeInstance, f),
    skillset: (f = msg.getSkillset()) && common_pb.SkillSetDTO.toObject(includeInstance, f),
    equipmentslot: (f = msg.getEquipmentslot()) && common_pb.EquipmentSlotDTO.toObject(includeInstance, f),
    storageslot: (f = msg.getStorageslot()) && common_pb.StorageSlotDTO.toObject(includeInstance, f),
    trait: (f = msg.getTrait()) && common_pb.TraitDTO.toObject(includeInstance, f),
    addiction: (f = msg.getAddiction()) && common_pb.AddictionDTO.toObject(includeInstance, f),
    background: (f = msg.getBackground()) && common_pb.BackgroundDTO.toObject(includeInstance, f),
    birthsign: (f = msg.getBirthsign()) && common_pb.BirthsignDTO.toObject(includeInstance, f),
    character: (f = msg.getCharacter()) && common_pb.CharacterDTO.toObject(includeInstance, f),
    charactergeninstruction: (f = msg.getCharactergeninstruction()) && common_pb.CharacterGenInstructionDTO.toObject(includeInstance, f),
    charactergroupgeninstruction: (f = msg.getCharactergroupgeninstruction()) && common_pb.CharacterGroupGenInstructionDTO.toObject(includeInstance, f),
    characterprofession: (f = msg.getCharacterprofession()) && common_pb.CharacterProfessionDTO.toObject(includeInstance, f),
    disease: (f = msg.getDisease()) && common_pb.DiseaseDTO.toObject(includeInstance, f),
    effect: (f = msg.getEffect()) && common_pb.EffectDTO.toObject(includeInstance, f),
    fact: (f = msg.getFact()) && common_pb.FactDTO.toObject(includeInstance, f),
    faction: (f = msg.getFaction()) && common_pb.FactionDTO.toObject(includeInstance, f),
    itemset: (f = msg.getItemset()) && common_pb.ItemSetDTO.toObject(includeInstance, f),
    mood: (f = msg.getMood()) && common_pb.MoodDTO.toObject(includeInstance, f),
    need: (f = msg.getNeed()) && common_pb.NeedDTO.toObject(includeInstance, f),
    personalityprofile: (f = msg.getPersonalityprofile()) && common_pb.PersonalityProfileDTO.toObject(includeInstance, f),
    race: (f = msg.getRace()) && common_pb.RaceDTO.toObject(includeInstance, f),
    religion: (f = msg.getReligion()) && common_pb.ReligionDTO.toObject(includeInstance, f),
    resistance: (f = msg.getResistance()) && common_pb.ResistanceDTO.toObject(includeInstance, f),
    status: (f = msg.getStatus()) && common_pb.StatusDTO.toObject(includeInstance, f),
    tag: (f = msg.getTag()) && common_pb.TagDTO.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.content.ContentBodyDTO}
 */
proto.content.ContentBodyDTO.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.content.ContentBodyDTO;
  return proto.content.ContentBodyDTO.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.content.ContentBodyDTO} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.content.ContentBodyDTO}
 */
proto.content.ContentBodyDTO.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new common_pb.ItemDTO;
      reader.readMessage(value,common_pb.ItemDTO.deserializeBinaryFromReader);
      msg.setItem(value);
      break;
    case 2:
      var value = new common_pb.PastExperienceDTO;
      reader.readMessage(value,common_pb.PastExperienceDTO.deserializeBinaryFromReader);
      msg.setPastexperience(value);
      break;
    case 3:
      var value = new common_pb.CharacterMemoryDTO;
      reader.readMessage(value,common_pb.CharacterMemoryDTO.deserializeBinaryFromReader);
      msg.setCharactermemory(value);
      break;
    case 4:
      var value = new common_pb.MemoryDTO;
      reader.readMessage(value,common_pb.MemoryDTO.deserializeBinaryFromReader);
      msg.setMemory(value);
      break;
    case 5:
      var value = new common_pb.MemoryPoolDTO;
      reader.readMessage(value,common_pb.MemoryPoolDTO.deserializeBinaryFromReader);
      msg.setMemorypool(value);
      break;
    case 6:
      var value = new common_pb.MemoryPoolEntryDTO;
      reader.readMessage(value,common_pb.MemoryPoolEntryDTO.deserializeBinaryFromReader);
      msg.setMemorypoolentry(value);
      break;
    case 7:
      var value = new common_pb.SkillDTO;
      reader.readMessage(value,common_pb.SkillDTO.deserializeBinaryFromReader);
      msg.setSkill(value);
      break;
    case 8:
      var value = new common_pb.SkillSetDTO;
      reader.readMessage(value,common_pb.SkillSetDTO.deserializeBinaryFromReader);
      msg.setSkillset(value);
      break;
    case 9:
      var value = new common_pb.EquipmentSlotDTO;
      reader.readMessage(value,common_pb.EquipmentSlotDTO.deserializeBinaryFromReader);
      msg.setEquipmentslot(value);
      break;
    case 10:
      var value = new common_pb.StorageSlotDTO;
      reader.readMessage(value,common_pb.StorageSlotDTO.deserializeBinaryFromReader);
      msg.setStorageslot(value);
      break;
    case 11:
      var value = new common_pb.TraitDTO;
      reader.readMessage(value,common_pb.TraitDTO.deserializeBinaryFromReader);
      msg.setTrait(value);
      break;
    case 12:
      var value = new common_pb.AddictionDTO;
      reader.readMessage(value,common_pb.AddictionDTO.deserializeBinaryFromReader);
      msg.setAddiction(value);
      break;
    case 13:
      var value = new common_pb.BackgroundDTO;
      reader.readMessage(value,common_pb.BackgroundDTO.deserializeBinaryFromReader);
      msg.setBackground(value);
      break;
    case 14:
      var value = new common_pb.BirthsignDTO;
      reader.readMessage(value,common_pb.BirthsignDTO.deserializeBinaryFromReader);
      msg.setBirthsign(value);
      break;
    case 15:
      var value = new common_pb.CharacterDTO;
      reader.readMessage(value,common_pb.CharacterDTO.deserializeBinaryFromReader);
      msg.setCharacter(value);
      break;
    case 16:
      var value = new common_pb.CharacterGenInstructionDTO;
      reader.readMessage(value,common_pb.CharacterGenInstructionDTO.deserializeBinaryFromReader);
      msg.setCharactergeninstruction(value);
      break;
    case 17:
      var value = new common_pb.CharacterGroupGenInstructionDTO;
      reader.readMessage(value,common_pb.CharacterGroupGenInstructionDTO.deserializeBinaryFromReader);
      msg.setCharactergroupgeninstruction(value);
      break;
    case 18:
      var value = new common_pb.CharacterProfessionDTO;
      reader.readMessage(value,common_pb.CharacterProfessionDTO.deserializeBinaryFromReader);
      msg.setCharacterprofession(value);
      break;
    case 19:
      var value = new common_pb.DiseaseDTO;
      reader.readMessage(value,common_pb.DiseaseDTO.deserializeBinaryFromReader);
      msg.setDisease(value);
      break;
    case 20:
      var value = new common_pb.EffectDTO;
      reader.readMessage(value,common_pb.EffectDTO.deserializeBinaryFromReader);
      msg.setEffect(value);
      break;
    case 21:
      var value = new common_pb.FactDTO;
      reader.readMessage(value,common_pb.FactDTO.deserializeBinaryFromReader);
      msg.setFact(value);
      break;
    case 22:
      var value = new common_pb.FactionDTO;
      reader.readMessage(value,common_pb.FactionDTO.deserializeBinaryFromReader);
      msg.setFaction(value);
      break;
    case 23:
      var value = new common_pb.ItemSetDTO;
      reader.readMessage(value,common_pb.ItemSetDTO.deserializeBinaryFromReader);
      msg.setItemset(value);
      break;
    case 24:
      var value = new common_pb.MoodDTO;
      reader.readMessage(value,common_pb.MoodDTO.deserializeBinaryFromReader);
      msg.setMood(value);
      break;
    case 25:
      var value = new common_pb.NeedDTO;
      reader.readMessage(value,common_pb.NeedDTO.deserializeBinaryFromReader);
      msg.setNeed(value);
      break;
    case 26:
      var value = new common_pb.PersonalityProfileDTO;
      reader.readMessage(value,common_pb.PersonalityProfileDTO.deserializeBinaryFromReader);
      msg.setPersonalityprofile(value);
      break;
    case 27:
      var value = new common_pb.RaceDTO;
      reader.readMessage(value,common_pb.RaceDTO.deserializeBinaryFromReader);
      msg.setRace(value);
      break;
    case 28:
      var value = new common_pb.ReligionDTO;
      reader.readMessage(value,common_pb.ReligionDTO.deserializeBinaryFromReader);
      msg.setReligion(value);
      break;
    case 29:
      var value = new common_pb.ResistanceDTO;
      reader.readMessage(value,common_pb.ResistanceDTO.deserializeBinaryFromReader);
      msg.setResistance(value);
      break;
    case 30:
      var value = new common_pb.StatusDTO;
      reader.readMessage(value,common_pb.StatusDTO.deserializeBinaryFromReader);
      msg.setStatus(value);
      break;
    case 31:
      var value = new common_pb.TagDTO;
      reader.readMessage(value,common_pb.TagDTO.deserializeBinaryFromReader);
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.content.ContentBodyDTO.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.content.ContentBodyDTO.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.content.ContentBodyDTO} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.content.ContentBodyDTO.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      common_pb.ItemDTO.serializeBinaryToWriter
    );
  }
  f = message.getPastexperience();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.PastExperienceDTO.serializeBinaryToWriter
    );
  }
  f = message.getCharactermemory();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.CharacterMemoryDTO.serializeBinaryToWriter
    );
  }
  f = message.getMemory();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      common_pb.MemoryDTO.serializeBinaryToWriter
    );
  }
  f = message.getMemorypool();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      common_pb.MemoryPoolDTO.serializeBinaryToWriter
    );
  }
  f = message.getMemorypoolentry();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      common_pb.MemoryPoolEntryDTO.serializeBinaryToWriter
    );
  }
  f = message.getSkill();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.SkillDTO.serializeBinaryToWriter
    );
  }
  f = message.getSkillset();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.SkillSetDTO.serializeBinaryToWriter
    );
  }
  f = message.getEquipmentslot();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      common_pb.EquipmentSlotDTO.serializeBinaryToWriter
    );
  }
  f = message.getStorageslot();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      common_pb.StorageSlotDTO.serializeBinaryToWriter
    );
  }
  f = message.getTrait();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      common_pb.TraitDTO.serializeBinaryToWriter
    );
  }
  f = message.getAddiction();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      common_pb.AddictionDTO.serializeBinaryToWriter
    );
  }
  f = message.getBackground();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      common_pb.BackgroundDTO.serializeBinaryToWriter
    );
  }
  f = message.getBirthsign();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      common_pb.BirthsignDTO.serializeBinaryToWriter
    );
  }
  f = message.getCharacter();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      common_pb.CharacterDTO.serializeBinaryToWriter
    );
  }
  f = message.getCharactergeninstruction();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      common_pb.CharacterGenInstructionDTO.serializeBinaryToWriter
    );
  }
  f = message.getCharactergroupgeninstruction();
  if (f != null) {
    writer.writeMessage(
      17,
      f,
      common_pb.CharacterGroupGenInstructionDTO.serializeBinaryToWriter
    );
  }
  f = message.getCharacterprofession();
  if (f != null) {
    writer.writeMessage(
      18,
      f,
      common_pb.CharacterProfessionDTO.serializeBinaryToWriter
    );
  }
  f = message.getDisease();
  if (f != null) {
    writer.writeMessage(
      19,
      f,
      common_pb.DiseaseDTO.serializeBinaryToWriter
    );
  }
  f = message.getEffect();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      common_pb.EffectDTO.serializeBinaryToWriter
    );
  }
  f = message.getFact();
  if (f != null) {
    writer.writeMessage(
      21,
      f,
      common_pb.FactDTO.serializeBinaryToWriter
    );
  }
  f = message.getFaction();
  if (f != null) {
    writer.writeMessage(
      22,
      f,
      common_pb.FactionDTO.serializeBinaryToWriter
    );
  }
  f = message.getItemset();
  if (f != null) {
    writer.writeMessage(
      23,
      f,
      common_pb.ItemSetDTO.serializeBinaryToWriter
    );
  }
  f = message.getMood();
  if (f != null) {
    writer.writeMessage(
      24,
      f,
      common_pb.MoodDTO.serializeBinaryToWriter
    );
  }
  f = message.getNeed();
  if (f != null) {
    writer.writeMessage(
      25,
      f,
      common_pb.NeedDTO.serializeBinaryToWriter
    );
  }
  f = message.getPersonalityprofile();
  if (f != null) {
    writer.writeMessage(
      26,
      f,
      common_pb.PersonalityProfileDTO.serializeBinaryToWriter
    );
  }
  f = message.getRace();
  if (f != null) {
    writer.writeMessage(
      27,
      f,
      common_pb.RaceDTO.serializeBinaryToWriter
    );
  }
  f = message.getReligion();
  if (f != null) {
    writer.writeMessage(
      28,
      f,
      common_pb.ReligionDTO.serializeBinaryToWriter
    );
  }
  f = message.getResistance();
  if (f != null) {
    writer.writeMessage(
      29,
      f,
      common_pb.ResistanceDTO.serializeBinaryToWriter
    );
  }
  f = message.getStatus();
  if (f != null) {
    writer.writeMessage(
      30,
      f,
      common_pb.StatusDTO.serializeBinaryToWriter
    );
  }
  f = message.getTag();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      common_pb.TagDTO.serializeBinaryToWriter
    );
  }
};


/**
 * optional common.ItemDTO Item = 1;
 * @return {?proto.common.ItemDTO}
 */
proto.content.ContentBodyDTO.prototype.getItem = function() {
  return /** @type{?proto.common.ItemDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ItemDTO, 1));
};


/**
 * @param {?proto.common.ItemDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setItem = function(value) {
  return jspb.Message.setOneofWrapperField(this, 1, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearItem = function() {
  return this.setItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional common.PastExperienceDTO PastExperience = 2;
 * @return {?proto.common.PastExperienceDTO}
 */
proto.content.ContentBodyDTO.prototype.getPastexperience = function() {
  return /** @type{?proto.common.PastExperienceDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.PastExperienceDTO, 2));
};


/**
 * @param {?proto.common.PastExperienceDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setPastexperience = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearPastexperience = function() {
  return this.setPastexperience(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasPastexperience = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional common.CharacterMemoryDTO CharacterMemory = 3;
 * @return {?proto.common.CharacterMemoryDTO}
 */
proto.content.ContentBodyDTO.prototype.getCharactermemory = function() {
  return /** @type{?proto.common.CharacterMemoryDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.CharacterMemoryDTO, 3));
};


/**
 * @param {?proto.common.CharacterMemoryDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setCharactermemory = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearCharactermemory = function() {
  return this.setCharactermemory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasCharactermemory = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional common.MemoryDTO Memory = 4;
 * @return {?proto.common.MemoryDTO}
 */
proto.content.ContentBodyDTO.prototype.getMemory = function() {
  return /** @type{?proto.common.MemoryDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.MemoryDTO, 4));
};


/**
 * @param {?proto.common.MemoryDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setMemory = function(value) {
  return jspb.Message.setOneofWrapperField(this, 4, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearMemory = function() {
  return this.setMemory(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasMemory = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional common.MemoryPoolDTO MemoryPool = 5;
 * @return {?proto.common.MemoryPoolDTO}
 */
proto.content.ContentBodyDTO.prototype.getMemorypool = function() {
  return /** @type{?proto.common.MemoryPoolDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.MemoryPoolDTO, 5));
};


/**
 * @param {?proto.common.MemoryPoolDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setMemorypool = function(value) {
  return jspb.Message.setOneofWrapperField(this, 5, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearMemorypool = function() {
  return this.setMemorypool(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasMemorypool = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional common.MemoryPoolEntryDTO MemoryPoolEntry = 6;
 * @return {?proto.common.MemoryPoolEntryDTO}
 */
proto.content.ContentBodyDTO.prototype.getMemorypoolentry = function() {
  return /** @type{?proto.common.MemoryPoolEntryDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.MemoryPoolEntryDTO, 6));
};


/**
 * @param {?proto.common.MemoryPoolEntryDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setMemorypoolentry = function(value) {
  return jspb.Message.setOneofWrapperField(this, 6, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearMemorypoolentry = function() {
  return this.setMemorypoolentry(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasMemorypoolentry = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional common.SkillDTO Skill = 7;
 * @return {?proto.common.SkillDTO}
 */
proto.content.ContentBodyDTO.prototype.getSkill = function() {
  return /** @type{?proto.common.SkillDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.SkillDTO, 7));
};


/**
 * @param {?proto.common.SkillDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setSkill = function(value) {
  return jspb.Message.setOneofWrapperField(this, 7, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearSkill = function() {
  return this.setSkill(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasSkill = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional common.SkillSetDTO SkillSet = 8;
 * @return {?proto.common.SkillSetDTO}
 */
proto.content.ContentBodyDTO.prototype.getSkillset = function() {
  return /** @type{?proto.common.SkillSetDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.SkillSetDTO, 8));
};


/**
 * @param {?proto.common.SkillSetDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setSkillset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 8, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearSkillset = function() {
  return this.setSkillset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasSkillset = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional common.EquipmentSlotDTO EquipmentSlot = 9;
 * @return {?proto.common.EquipmentSlotDTO}
 */
proto.content.ContentBodyDTO.prototype.getEquipmentslot = function() {
  return /** @type{?proto.common.EquipmentSlotDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.EquipmentSlotDTO, 9));
};


/**
 * @param {?proto.common.EquipmentSlotDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setEquipmentslot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 9, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearEquipmentslot = function() {
  return this.setEquipmentslot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasEquipmentslot = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional common.StorageSlotDTO StorageSlot = 10;
 * @return {?proto.common.StorageSlotDTO}
 */
proto.content.ContentBodyDTO.prototype.getStorageslot = function() {
  return /** @type{?proto.common.StorageSlotDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.StorageSlotDTO, 10));
};


/**
 * @param {?proto.common.StorageSlotDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setStorageslot = function(value) {
  return jspb.Message.setOneofWrapperField(this, 10, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearStorageslot = function() {
  return this.setStorageslot(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasStorageslot = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional common.TraitDTO Trait = 11;
 * @return {?proto.common.TraitDTO}
 */
proto.content.ContentBodyDTO.prototype.getTrait = function() {
  return /** @type{?proto.common.TraitDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.TraitDTO, 11));
};


/**
 * @param {?proto.common.TraitDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setTrait = function(value) {
  return jspb.Message.setOneofWrapperField(this, 11, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearTrait = function() {
  return this.setTrait(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasTrait = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional common.AddictionDTO Addiction = 12;
 * @return {?proto.common.AddictionDTO}
 */
proto.content.ContentBodyDTO.prototype.getAddiction = function() {
  return /** @type{?proto.common.AddictionDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.AddictionDTO, 12));
};


/**
 * @param {?proto.common.AddictionDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setAddiction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 12, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearAddiction = function() {
  return this.setAddiction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasAddiction = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional common.BackgroundDTO Background = 13;
 * @return {?proto.common.BackgroundDTO}
 */
proto.content.ContentBodyDTO.prototype.getBackground = function() {
  return /** @type{?proto.common.BackgroundDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.BackgroundDTO, 13));
};


/**
 * @param {?proto.common.BackgroundDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setBackground = function(value) {
  return jspb.Message.setOneofWrapperField(this, 13, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearBackground = function() {
  return this.setBackground(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasBackground = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional common.BirthsignDTO Birthsign = 14;
 * @return {?proto.common.BirthsignDTO}
 */
proto.content.ContentBodyDTO.prototype.getBirthsign = function() {
  return /** @type{?proto.common.BirthsignDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.BirthsignDTO, 14));
};


/**
 * @param {?proto.common.BirthsignDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setBirthsign = function(value) {
  return jspb.Message.setOneofWrapperField(this, 14, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearBirthsign = function() {
  return this.setBirthsign(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasBirthsign = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional common.CharacterDTO Character = 15;
 * @return {?proto.common.CharacterDTO}
 */
proto.content.ContentBodyDTO.prototype.getCharacter = function() {
  return /** @type{?proto.common.CharacterDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.CharacterDTO, 15));
};


/**
 * @param {?proto.common.CharacterDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setCharacter = function(value) {
  return jspb.Message.setOneofWrapperField(this, 15, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearCharacter = function() {
  return this.setCharacter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasCharacter = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional common.CharacterGenInstructionDTO CharacterGenInstruction = 16;
 * @return {?proto.common.CharacterGenInstructionDTO}
 */
proto.content.ContentBodyDTO.prototype.getCharactergeninstruction = function() {
  return /** @type{?proto.common.CharacterGenInstructionDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.CharacterGenInstructionDTO, 16));
};


/**
 * @param {?proto.common.CharacterGenInstructionDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setCharactergeninstruction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 16, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearCharactergeninstruction = function() {
  return this.setCharactergeninstruction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasCharactergeninstruction = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional common.CharacterGroupGenInstructionDTO CharacterGroupGenInstruction = 17;
 * @return {?proto.common.CharacterGroupGenInstructionDTO}
 */
proto.content.ContentBodyDTO.prototype.getCharactergroupgeninstruction = function() {
  return /** @type{?proto.common.CharacterGroupGenInstructionDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.CharacterGroupGenInstructionDTO, 17));
};


/**
 * @param {?proto.common.CharacterGroupGenInstructionDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setCharactergroupgeninstruction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 17, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearCharactergroupgeninstruction = function() {
  return this.setCharactergroupgeninstruction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasCharactergroupgeninstruction = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional common.CharacterProfessionDTO CharacterProfession = 18;
 * @return {?proto.common.CharacterProfessionDTO}
 */
proto.content.ContentBodyDTO.prototype.getCharacterprofession = function() {
  return /** @type{?proto.common.CharacterProfessionDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.CharacterProfessionDTO, 18));
};


/**
 * @param {?proto.common.CharacterProfessionDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setCharacterprofession = function(value) {
  return jspb.Message.setOneofWrapperField(this, 18, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearCharacterprofession = function() {
  return this.setCharacterprofession(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasCharacterprofession = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional common.DiseaseDTO Disease = 19;
 * @return {?proto.common.DiseaseDTO}
 */
proto.content.ContentBodyDTO.prototype.getDisease = function() {
  return /** @type{?proto.common.DiseaseDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.DiseaseDTO, 19));
};


/**
 * @param {?proto.common.DiseaseDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setDisease = function(value) {
  return jspb.Message.setOneofWrapperField(this, 19, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearDisease = function() {
  return this.setDisease(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasDisease = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional common.EffectDTO Effect = 20;
 * @return {?proto.common.EffectDTO}
 */
proto.content.ContentBodyDTO.prototype.getEffect = function() {
  return /** @type{?proto.common.EffectDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.EffectDTO, 20));
};


/**
 * @param {?proto.common.EffectDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setEffect = function(value) {
  return jspb.Message.setOneofWrapperField(this, 20, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearEffect = function() {
  return this.setEffect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasEffect = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional common.FactDTO Fact = 21;
 * @return {?proto.common.FactDTO}
 */
proto.content.ContentBodyDTO.prototype.getFact = function() {
  return /** @type{?proto.common.FactDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.FactDTO, 21));
};


/**
 * @param {?proto.common.FactDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setFact = function(value) {
  return jspb.Message.setOneofWrapperField(this, 21, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearFact = function() {
  return this.setFact(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasFact = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional common.FactionDTO Faction = 22;
 * @return {?proto.common.FactionDTO}
 */
proto.content.ContentBodyDTO.prototype.getFaction = function() {
  return /** @type{?proto.common.FactionDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.FactionDTO, 22));
};


/**
 * @param {?proto.common.FactionDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setFaction = function(value) {
  return jspb.Message.setOneofWrapperField(this, 22, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearFaction = function() {
  return this.setFaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasFaction = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional common.ItemSetDTO ItemSet = 23;
 * @return {?proto.common.ItemSetDTO}
 */
proto.content.ContentBodyDTO.prototype.getItemset = function() {
  return /** @type{?proto.common.ItemSetDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ItemSetDTO, 23));
};


/**
 * @param {?proto.common.ItemSetDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setItemset = function(value) {
  return jspb.Message.setOneofWrapperField(this, 23, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearItemset = function() {
  return this.setItemset(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasItemset = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional common.MoodDTO Mood = 24;
 * @return {?proto.common.MoodDTO}
 */
proto.content.ContentBodyDTO.prototype.getMood = function() {
  return /** @type{?proto.common.MoodDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.MoodDTO, 24));
};


/**
 * @param {?proto.common.MoodDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setMood = function(value) {
  return jspb.Message.setOneofWrapperField(this, 24, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearMood = function() {
  return this.setMood(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasMood = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional common.NeedDTO Need = 25;
 * @return {?proto.common.NeedDTO}
 */
proto.content.ContentBodyDTO.prototype.getNeed = function() {
  return /** @type{?proto.common.NeedDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.NeedDTO, 25));
};


/**
 * @param {?proto.common.NeedDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setNeed = function(value) {
  return jspb.Message.setOneofWrapperField(this, 25, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearNeed = function() {
  return this.setNeed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasNeed = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional common.PersonalityProfileDTO PersonalityProfile = 26;
 * @return {?proto.common.PersonalityProfileDTO}
 */
proto.content.ContentBodyDTO.prototype.getPersonalityprofile = function() {
  return /** @type{?proto.common.PersonalityProfileDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.PersonalityProfileDTO, 26));
};


/**
 * @param {?proto.common.PersonalityProfileDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setPersonalityprofile = function(value) {
  return jspb.Message.setOneofWrapperField(this, 26, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearPersonalityprofile = function() {
  return this.setPersonalityprofile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasPersonalityprofile = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional common.RaceDTO Race = 27;
 * @return {?proto.common.RaceDTO}
 */
proto.content.ContentBodyDTO.prototype.getRace = function() {
  return /** @type{?proto.common.RaceDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.RaceDTO, 27));
};


/**
 * @param {?proto.common.RaceDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setRace = function(value) {
  return jspb.Message.setOneofWrapperField(this, 27, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearRace = function() {
  return this.setRace(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasRace = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional common.ReligionDTO Religion = 28;
 * @return {?proto.common.ReligionDTO}
 */
proto.content.ContentBodyDTO.prototype.getReligion = function() {
  return /** @type{?proto.common.ReligionDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ReligionDTO, 28));
};


/**
 * @param {?proto.common.ReligionDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setReligion = function(value) {
  return jspb.Message.setOneofWrapperField(this, 28, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearReligion = function() {
  return this.setReligion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasReligion = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional common.ResistanceDTO Resistance = 29;
 * @return {?proto.common.ResistanceDTO}
 */
proto.content.ContentBodyDTO.prototype.getResistance = function() {
  return /** @type{?proto.common.ResistanceDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.ResistanceDTO, 29));
};


/**
 * @param {?proto.common.ResistanceDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setResistance = function(value) {
  return jspb.Message.setOneofWrapperField(this, 29, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearResistance = function() {
  return this.setResistance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasResistance = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional common.StatusDTO Status = 30;
 * @return {?proto.common.StatusDTO}
 */
proto.content.ContentBodyDTO.prototype.getStatus = function() {
  return /** @type{?proto.common.StatusDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.StatusDTO, 30));
};


/**
 * @param {?proto.common.StatusDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setStatus = function(value) {
  return jspb.Message.setOneofWrapperField(this, 30, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearStatus = function() {
  return this.setStatus(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasStatus = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional common.TagDTO Tag = 31;
 * @return {?proto.common.TagDTO}
 */
proto.content.ContentBodyDTO.prototype.getTag = function() {
  return /** @type{?proto.common.TagDTO} */ (
    jspb.Message.getWrapperField(this, common_pb.TagDTO, 31));
};


/**
 * @param {?proto.common.TagDTO|undefined} value
 * @return {!proto.content.ContentBodyDTO} returns this
*/
proto.content.ContentBodyDTO.prototype.setTag = function(value) {
  return jspb.Message.setOneofWrapperField(this, 31, proto.content.ContentBodyDTO.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.content.ContentBodyDTO} returns this
 */
proto.content.ContentBodyDTO.prototype.clearTag = function() {
  return this.setTag(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.content.ContentBodyDTO.prototype.hasTag = function() {
  return jspb.Message.getField(this, 31) != null;
};


goog.object.extend(exports, proto.content);
