/**
 * @fileoverview gRPC-Web generated client stub for content
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v3.12.4
// source: content.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as content_pb from './content_pb'; // proto import: "content.proto"


export class ContentServiceClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'binary';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorcreate = new grpcWeb.MethodDescriptor(
    '/content.ContentService/create',
    grpcWeb.MethodType.UNARY,
    content_pb.CreateContentRequest,
    content_pb.CreateContentResponse,
    (request: content_pb.CreateContentRequest) => {
      return request.serializeBinary();
    },
    content_pb.CreateContentResponse.deserializeBinary
  );

  create(
    request: content_pb.CreateContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<content_pb.CreateContentResponse>;

  create(
    request: content_pb.CreateContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.CreateContentResponse) => void): grpcWeb.ClientReadableStream<content_pb.CreateContentResponse>;

  create(
    request: content_pb.CreateContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.CreateContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/create',
        request,
        metadata || {},
        this.methodDescriptorcreate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/create',
    request,
    metadata || {},
    this.methodDescriptorcreate);
  }

  methodDescriptorupdate = new grpcWeb.MethodDescriptor(
    '/content.ContentService/update',
    grpcWeb.MethodType.UNARY,
    content_pb.UpdateContentRequest,
    content_pb.UpdateContentResponse,
    (request: content_pb.UpdateContentRequest) => {
      return request.serializeBinary();
    },
    content_pb.UpdateContentResponse.deserializeBinary
  );

  update(
    request: content_pb.UpdateContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<content_pb.UpdateContentResponse>;

  update(
    request: content_pb.UpdateContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.UpdateContentResponse) => void): grpcWeb.ClientReadableStream<content_pb.UpdateContentResponse>;

  update(
    request: content_pb.UpdateContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.UpdateContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/update',
        request,
        metadata || {},
        this.methodDescriptorupdate,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/update',
    request,
    metadata || {},
    this.methodDescriptorupdate);
  }

  methodDescriptordelete = new grpcWeb.MethodDescriptor(
    '/content.ContentService/delete',
    grpcWeb.MethodType.UNARY,
    content_pb.DeleteContentRequest,
    content_pb.DeleteContentResponse,
    (request: content_pb.DeleteContentRequest) => {
      return request.serializeBinary();
    },
    content_pb.DeleteContentResponse.deserializeBinary
  );

  delete(
    request: content_pb.DeleteContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<content_pb.DeleteContentResponse>;

  delete(
    request: content_pb.DeleteContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.DeleteContentResponse) => void): grpcWeb.ClientReadableStream<content_pb.DeleteContentResponse>;

  delete(
    request: content_pb.DeleteContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.DeleteContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/delete',
        request,
        metadata || {},
        this.methodDescriptordelete,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/delete',
    request,
    metadata || {},
    this.methodDescriptordelete);
  }

  methodDescriptorsearch = new grpcWeb.MethodDescriptor(
    '/content.ContentService/search',
    grpcWeb.MethodType.UNARY,
    content_pb.SearchContentRequest,
    content_pb.SearchContentResponse,
    (request: content_pb.SearchContentRequest) => {
      return request.serializeBinary();
    },
    content_pb.SearchContentResponse.deserializeBinary
  );

  search(
    request: content_pb.SearchContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<content_pb.SearchContentResponse>;

  search(
    request: content_pb.SearchContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.SearchContentResponse) => void): grpcWeb.ClientReadableStream<content_pb.SearchContentResponse>;

  search(
    request: content_pb.SearchContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.SearchContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/search',
        request,
        metadata || {},
        this.methodDescriptorsearch,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/search',
    request,
    metadata || {},
    this.methodDescriptorsearch);
  }

  methodDescriptorcreateBulk = new grpcWeb.MethodDescriptor(
    '/content.ContentService/createBulk',
    grpcWeb.MethodType.UNARY,
    content_pb.CreateBulkContentRequest,
    content_pb.CreateBulkContentResponse,
    (request: content_pb.CreateBulkContentRequest) => {
      return request.serializeBinary();
    },
    content_pb.CreateBulkContentResponse.deserializeBinary
  );

  createBulk(
    request: content_pb.CreateBulkContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<content_pb.CreateBulkContentResponse>;

  createBulk(
    request: content_pb.CreateBulkContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.CreateBulkContentResponse) => void): grpcWeb.ClientReadableStream<content_pb.CreateBulkContentResponse>;

  createBulk(
    request: content_pb.CreateBulkContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.CreateBulkContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/createBulk',
        request,
        metadata || {},
        this.methodDescriptorcreateBulk,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/createBulk',
    request,
    metadata || {},
    this.methodDescriptorcreateBulk);
  }

  methodDescriptorupdateBulk = new grpcWeb.MethodDescriptor(
    '/content.ContentService/updateBulk',
    grpcWeb.MethodType.UNARY,
    content_pb.UpdateBulkContentRequest,
    content_pb.UpdateBulkContentResponse,
    (request: content_pb.UpdateBulkContentRequest) => {
      return request.serializeBinary();
    },
    content_pb.UpdateBulkContentResponse.deserializeBinary
  );

  updateBulk(
    request: content_pb.UpdateBulkContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<content_pb.UpdateBulkContentResponse>;

  updateBulk(
    request: content_pb.UpdateBulkContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.UpdateBulkContentResponse) => void): grpcWeb.ClientReadableStream<content_pb.UpdateBulkContentResponse>;

  updateBulk(
    request: content_pb.UpdateBulkContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.UpdateBulkContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/updateBulk',
        request,
        metadata || {},
        this.methodDescriptorupdateBulk,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/updateBulk',
    request,
    metadata || {},
    this.methodDescriptorupdateBulk);
  }

  methodDescriptordeleteBulk = new grpcWeb.MethodDescriptor(
    '/content.ContentService/deleteBulk',
    grpcWeb.MethodType.UNARY,
    content_pb.DeleteBulkContentRequest,
    content_pb.DeleteBulkContentResponse,
    (request: content_pb.DeleteBulkContentRequest) => {
      return request.serializeBinary();
    },
    content_pb.DeleteBulkContentResponse.deserializeBinary
  );

  deleteBulk(
    request: content_pb.DeleteBulkContentRequest,
    metadata?: grpcWeb.Metadata | null): Promise<content_pb.DeleteBulkContentResponse>;

  deleteBulk(
    request: content_pb.DeleteBulkContentRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.DeleteBulkContentResponse) => void): grpcWeb.ClientReadableStream<content_pb.DeleteBulkContentResponse>;

  deleteBulk(
    request: content_pb.DeleteBulkContentRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.DeleteBulkContentResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/deleteBulk',
        request,
        metadata || {},
        this.methodDescriptordeleteBulk,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/deleteBulk',
    request,
    metadata || {},
    this.methodDescriptordeleteBulk);
  }

  methodDescriptorgetStats = new grpcWeb.MethodDescriptor(
    '/content.ContentService/getStats',
    grpcWeb.MethodType.UNARY,
    content_pb.GetContentStatsRequest,
    content_pb.GetContentStatsResponse,
    (request: content_pb.GetContentStatsRequest) => {
      return request.serializeBinary();
    },
    content_pb.GetContentStatsResponse.deserializeBinary
  );

  getStats(
    request: content_pb.GetContentStatsRequest,
    metadata?: grpcWeb.Metadata | null): Promise<content_pb.GetContentStatsResponse>;

  getStats(
    request: content_pb.GetContentStatsRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: content_pb.GetContentStatsResponse) => void): grpcWeb.ClientReadableStream<content_pb.GetContentStatsResponse>;

  getStats(
    request: content_pb.GetContentStatsRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: content_pb.GetContentStatsResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/content.ContentService/getStats',
        request,
        metadata || {},
        this.methodDescriptorgetStats,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/content.ContentService/getStats',
    request,
    metadata || {},
    this.methodDescriptorgetStats);
  }

}

