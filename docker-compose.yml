version: '3.8'

services:
  # Backend Microservices
  content-service:
    build:
      context: ./backend/content-service
      dockerfile: Dockerfile.dev
    container_name: content_service
    restart: always
    ports:
      - "5001:50051"
    environment:
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - DATABASE_HOST__WORLD=world-db
      - DATABASE_PORT__WORLD=5432
      - DATABASE_NAME__WORLD=${POSTGRES_DB__WORLD}
      - DATABASE_HOST__CAMPAIGN=campaign-db
      - DATABASE_PORT__CAMPAIGN=5432
      - DATABASE_NAME__CAMPAIGN=${POSTGRES_DB__CAMPAIGN}
    volumes:
      - ./backend/content-service:/usr/src/app
    depends_on:
      - world-db
      - campaign-db
    profiles:
      - fullstack
      - backend

  # Uncomment the other services as they become ready
  # ai-service:
  #   build:
  #     context: ./backend/ai-service
  #     dockerfile: Dockerfile.dev
  #   container_name: ai_service
  #   restart: always
  #   ports:
  #     - "5002:50051"
  #   depends_on:
  #     - world-db
  #   profiles:
  #     - backend

  # campaign-service:
  #   build:
  #     context: ./backend/campaign-service
  #     dockerfile: Dockerfile.dev
  #   container_name: campaign_service
  #   restart: always
  #   ports:
  #     - "5003:50051"
  #   depends_on:
  #     - campaign-db
  #   profiles:
  #     - backend

  # combat-service:
  #   build:
  #     context: ./backend/combat-service
  #     dockerfile: Dockerfile.dev
  #   container_name: combat_service
  #   restart: always
  #   ports:
  #     - "5004:50051"
  #   depends_on:
  #     - world-db
  #   profiles:
  #     - backend

  # dialogue-service:
  #   build:
  #     context: ./backend/dialogue-service
  #     dockerfile: Dockerfile.dev
  #   container_name: dialogue_service
  #   restart: always
  #   ports:
  #     - "5005:50051"
  #   depends_on:
  #     - world-db
  #   profiles:
  #     - backend

  # trade-service:
  #   build:
  #     context: ./backend/trade-service
  #     dockerfile: Dockerfile.dev
  #   container_name: trade_service
  #   restart: always
  #   ports:
  #     - "5006:50051"
  #   depends_on:
  #     - world-db
  #   profiles:
  #     - backend

  # Databases
  world-db:
    image: postgres:14
    container_name: world_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB__WORLD}
    ports:
      - "5433:5432"
    volumes:
      - world_db_data:/var/lib/postgresql/data
    profiles:
      - database
      - fullstack
      - backend

  campaign-db:
    image: postgres:14
    container_name: campaign_db
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB__CAMPAIGN}
    ports:
      - "5434:5432"
    volumes:
      - campaign_db_data:/var/lib/postgresql/data
    profiles:
      - database
      - fullstack
      - backend

  # # Frontends
  # world-building-ui:
  #   build:
  #     context: ./frontend/world-building-ui
  #   container_name: world_building_ui
  #   restart: always
  #   ports:
  #     - "3001:3000"
  #   volumes:
  #     - ./frontend/world-building-ui:/usr/src/app
  #   depends_on:
  #     - content-service
  #   profiles:
  #     - frontend
  #     - fullstack

  # campaign-ui:
  #   build:
  #     context: ./frontend/campaign-ui
  #   container_name: campaign_ui
  #   restart: always
  #   ports:
  #     - "3002:3000"
  #   depends_on:
  #     - campaign-service
  #   profiles:
  #     - frontend

volumes:
  world_db_data:
  campaign_db_data: